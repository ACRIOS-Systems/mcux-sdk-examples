<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_SUPER" name="SDKVersion 2.9.0 SuperSet" brief="This is SDK version 2.9.0 manifest file." format_version="3.8" api_version="2.0.0" configuration="37bbf4eb706f3814bfad8f3a27525c83" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.8.xsd">
  <!--Timestamp (UTC): 2021-03-23 11:41:22.359613-->
  <!--This manifest is generated based on sdk repo commit: b1eede1d406d3392a45a06abc2494c2b87a1853b-->
  <defines>
    <define name="CPU_$|package|" value=""/>
    <define name="CPU_$|package|_$|core|" value=""/>
    <define name="CPU_$|package|_$|core_name|" value=""/>
  </defines>
  <externalDefinitions>
    <definition extID="QSPI_FLASH_MIMX8MQ6xxxHZ"/>
    <definition extID="QSPI_FLASH_MIMX8MQ6xxxJZ"/>
  </externalDefinitions>
  <ksdk id="MCUXpressoSDK290" name="MCUXpressoSDK290" version="2.9.0"/>
  <compilers>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
  </compilers>
  <toolchainSettings>
    <toolchainSetting id="com.nxp.mcuxpresso" name="mcuxpresso" version="11.3.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" toolchain="mcuxpresso">
      <option id="gnu.cpp.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.c.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.cpp.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.cpp.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="gnu.c.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
    </toolchainSetting>
  </toolchainSettings>
  <toolchains>
    <toolchain id="armgcc" name="GCC_ARM_Embedded" version="9.3.1" full_name="GCC ARM Embedded" compiler="compiler_gcc" type="armgcc" vendor="GCC ARM Embedded" vendor_url="http://launchpad.net/gcc-arm-embedded"/>
    <toolchain id="mcuxpresso" name="MCUXpresso_IDE" version="11.3.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" type="mcuxpresso" vendor="NXP Semiconductors" vendor_url="http://www.nxp.com">
      <debug>
        <debug_configuration id="com.crt.advproject.config.exe.release" name="Release Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.release.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.release.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.crt.advproject.config.exe.debug" name="Debug Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.debug.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.debug.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.debug" name="Debug Configuration" probe="Segger"/>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.release" name="Release Configuration" probe="Segger"/>
      </debug>
    </toolchain>
  </toolchains>
  <boards>
    <board id="evkmimx8mq" name="EVK-MIMX8MQ" href="https://www.nxp.com/pip/MCIMX8M-EVK" version="1.0.0" package="MIMX8MQ6DVAJZ">
      <description>Evaluation Kit for the i.MX 8M Applications Processor</description>
      <image path="core/boards/evkmimx8mq" type="image">
        <files mask="evkmimx8mq.png"/>
      </image>
      <examples>
        <example id="evkmimx8mq_ecspi_loopback" name="ecspi_loopback" brief="The ecspi_loopback demo shows how the ecspi do a loopback transfer internally.The ECSPI connects the transmitter and receiver sections internally, and the data shifted out from the most-significant bit of the shift register is looped back into the least-significant bit of the Shift register. In this way, a self-test of the complete transmit/receive path can be made. The output pins are not affected, and the input pins are ignored." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/ecspi" path="examples/evkmimx8mq/driver_examples/ecspi/ecspi_loopback">
          <external path="examples/evkmimx8mq/driver_examples/ecspi/ecspi_loopback" type="xml">
            <files mask="ecspi_loopback_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8mq_gpt_capture" name="gpt_capture" brief="The gpt_capture project is a simple demonstration program of the SDK GPT driver's input capture feature.The example sets up a GPT channel for rise-edge capture. Once the input signal is received,this example will print the capture value." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/gpt" path="examples/evkmimx8mq/driver_examples/gpt/capture">
          <external path="examples/evkmimx8mq/driver_examples/gpt/capture" type="xml">
            <files mask="gpt_capture_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8mq_gpt_timer" name="gpt_timer" brief="The gpt_timer project is a simple demonstration program of the SDK GPT driver. It sets up the GPThardware block to trigger a periodic interrupt after every 1 second. When the GPT interrupt is triggereda message a printed on the UART terminal." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/gpt" path="examples/evkmimx8mq/driver_examples/gpt/timer">
          <external path="examples/evkmimx8mq/driver_examples/gpt/timer" type="xml">
            <files mask="gpt_timer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8mq_hello_world" name="hello_world" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc" compiler="compiler_gcc" category="demo_apps" path="examples/evkmimx8mq/demo_apps/hello_world">
          <external path="examples/evkmimx8mq/demo_apps/hello_world" type="xml">
            <files mask="hello_world_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8mq_igpio_led_output" name="igpio_led_output" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/gpio" path="examples/evkmimx8mq/driver_examples/gpio/led_output">
          <external path="examples/evkmimx8mq/driver_examples/gpio/led_output" type="xml">
            <files mask="igpio_led_output_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8mq_ii2c_interrupt_b2b_transfer_master" name="ii2c_interrupt_b2b_transfer_master" brief="The i2c_interrupt_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/i2c" path="examples/evkmimx8mq/driver_examples/i2c/interrupt_b2b_transfer/master">
          <external path="examples/evkmimx8mq/driver_examples/i2c/interrupt_b2b_transfer/master" type="xml">
            <files mask="ii2c_interrupt_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8mq_ii2c_interrupt_b2b_transfer_slave" name="ii2c_interrupt_b2b_transfer_slave" brief="The i2c_interrupt_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with interrupt:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/i2c" path="examples/evkmimx8mq/driver_examples/i2c/interrupt_b2b_transfer/slave">
          <external path="examples/evkmimx8mq/driver_examples/i2c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="ii2c_interrupt_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8mq_ii2c_polling_b2b_transfer_master" name="ii2c_polling_b2b_transfer_master" brief="The i2c_polling_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer using polling method:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/i2c" path="examples/evkmimx8mq/driver_examples/i2c/polling_b2b_transfer/master">
          <external path="examples/evkmimx8mq/driver_examples/i2c/polling_b2b_transfer/master" type="xml">
            <files mask="ii2c_polling_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8mq_ii2c_polling_b2b_transfer_slave" name="ii2c_polling_b2b_transfer_slave" brief="The i2c_polling_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a polling master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/i2c" path="examples/evkmimx8mq/driver_examples/i2c/polling_b2b_transfer/slave">
          <external path="examples/evkmimx8mq/driver_examples/i2c/polling_b2b_transfer/slave" type="xml">
            <files mask="ii2c_polling_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8mq_ipwm" name="ipwm" brief="The PWM project is a simple demonstration program of the SDK PWM driver. It sets up the PWM hardwareblock to output PWM signals on one PWM channel. The example also shows PWM duty cycle is increase or decrease.The FIFO empty interrupt is provided. A new value will be loaded into FIFO when FIFO empty status bit is set. The PWM will run at the last set duty-cycle setting if all the values of the FIFO has been utilized, until the FIFO is reloaded or the PWM is disabled. When a new value is written, the duty cycle changes after the current period is over.The outputs can be observed by oscilloscope." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/pwm" path="examples/evkmimx8mq/driver_examples/pwm">
          <external path="examples/evkmimx8mq/driver_examples/pwm" type="xml">
            <files mask="ipwm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8mq_iuart_auto_baudrate_detect" name="iuart_auto_baudrate_detect" brief="The uart_auto_baudrate_detect example shows how to use uart auto baud rate detect feature:In this example, one uart instance connect to PC through uart. First, we should send characters a or A to board. The boars will set baud rate automatic. After baud rate has set, the board will send back all characters that PCsend to the board." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/uart" path="examples/evkmimx8mq/driver_examples/uart/auto_baudrate_detect">
          <external path="examples/evkmimx8mq/driver_examples/uart/auto_baudrate_detect" type="xml">
            <files mask="iuart_auto_baudrate_detect_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8mq_iuart_interrupt" name="iuart_interrupt" brief="The uart_functioncal_interrupt example shows how to use uart driver functionalAPI to receive data with interrupt method:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/uart" path="examples/evkmimx8mq/driver_examples/uart/interrupt">
          <external path="examples/evkmimx8mq/driver_examples/uart/interrupt" type="xml">
            <files mask="iuart_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8mq_iuart_interrupt_rb_transfer" name="iuart_interrupt_rb_transfer" brief="The uart_interrupt_ring_buffer example shows how to use uart driver in interrupt way withRX ring buffer enabled:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/uart" path="examples/evkmimx8mq/driver_examples/uart/interrupt_rb_transfer">
          <external path="examples/evkmimx8mq/driver_examples/uart/interrupt_rb_transfer" type="xml">
            <files mask="iuart_interrupt_rb_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8mq_iuart_interrupt_transfer" name="iuart_interrupt_transfer" brief="The uart_interrupt example shows how to use uart driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/uart" path="examples/evkmimx8mq/driver_examples/uart/interrupt_transfer">
          <external path="examples/evkmimx8mq/driver_examples/uart/interrupt_transfer" type="xml">
            <files mask="iuart_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8mq_iuart_polling" name="iuart_polling" brief="The uart_polling example shows how to use uart driver in polling way:In this example, one uart instance connect to PC through uart, the board will send back all characters that PCsend to the board." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/uart" path="examples/evkmimx8mq/driver_examples/uart/polling">
          <external path="examples/evkmimx8mq/driver_examples/uart/polling" type="xml">
            <files mask="iuart_polling_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8mq_qspi_polling_transfer" name="qspi_polling_transfer" brief="The qspi_polling example shows how to use qspi driver with polling:In this example, qspi will send data and operate the external flash connected with QSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and programe a page into the flash, at last check if the data in flash is correct.Notice: While do program, it is not suggested to make the flash write frequency bigger than the core clock frequency.In some tool chain's Debug version, this may cause core do not have enough speed to send data to flash.The flash write frequency equals to QSPI working frequency plus data line number. For example, if QSPI working in 48MHz,program command uses quad mode, the write frequency is 48MHz * 4 = 192MHz." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/qspi" path="examples/evkmimx8mq/driver_examples/qspi/polling_transfer">
          <external path="examples/evkmimx8mq/driver_examples/qspi/polling_transfer" type="xml">
            <files mask="qspi_polling_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8mq_rdc" name="rdc" brief="The RDC example shows how to control the peripheral and memory regionasscess policy using RDC and RDC_SEMA42" toolchain="armgcc" compiler="compiler_gcc" category="driver_examples" path="examples/evkmimx8mq/driver_examples/rdc">
          <external path="examples/evkmimx8mq/driver_examples/rdc" type="xml">
            <files mask="rdc_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8mq_sai_interrupt_transfer" name="sai_interrupt_transfer" brief="The sai_interrupt_transfer example shows how to use sai driver with interrupt:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/sai" path="examples/evkmimx8mq/driver_examples/sai/interrupt_transfer">
          <external path="examples/evkmimx8mq/driver_examples/sai/interrupt_transfer" type="xml">
            <files mask="sai_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8mq_sema4_uboot" name="sema4_uboot" brief="The sema4 uboot example shows how to use SEMA4 driver to lock and unlock a sema gate,the notification IRQ is also demonstrated in this example.This example should work together with uboot. This example runs on Cortex-M core,the uboot runs on the Cortex-A core." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/sema4" path="examples/evkmimx8mq/driver_examples/sema4/uboot">
          <external path="examples/evkmimx8mq/driver_examples/sema4/uboot" type="xml">
            <files mask="sema4_uboot_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8mq_tmu_monitor_report" name="tmu_monitor_report" brief="The TMU example shows how to configure TMU register to monitor and report the temperature from one ormore remote temperature measurement sites located on the chip.TMU has access to multiple temperature measurement sites strategically located on thechip. It monitors these sites and can signal an alarm if a programmed threshold is everexceeded.Note: Before monitoring the temperature, we must programming the calibration table." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/tmu" path="examples/evkmimx8mq/driver_examples/tmu/tmu_monitor_report">
          <external path="examples/evkmimx8mq/driver_examples/tmu/tmu_monitor_report" type="xml">
            <files mask="tmu_monitor_report_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimx8mq_wdog01" name="wdog01" brief="The WDOG Example project is to demonstrate usage of the KSDK wdog driver.In this example,implemented to test the wdog.And then after 10 times of refreshing the watchdog, a timeout reset is generated.We also try to refresh out of window to trigger reset after 10 times of refreshing.Please notice that because WDOG control registers are write-once only, so the WDOG_Init function and the WDOG_Disable function can be called only once after reset." toolchain="armgcc" compiler="compiler_gcc" category="driver_examples/wdog" path="examples/evkmimx8mq/driver_examples/wdog">
          <external path="examples/evkmimx8mq/driver_examples/wdog" type="xml">
            <files mask="wdog01_v3_8.xml"/>
          </external>
        </example>
      </examples>
    </board>
  </boards>
  <devices>
    <device id="MIMX8MQ6xxxHZ" name="MIMX8MQ6" version="1.0.0" full_name="MIMX8MQ6xxxHZ" family="MIMX8MQx" platform="i.MX">
      <description>i.MX 8M: Cortex-A53 up to 1.5GHz and Cortex-M4</description>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
      </metadataSet>
      <core id="cm4_MIMX8MQ6xxxHZ" name="cm4" fpu="true" type="cm4"/>
      <memory>
        <memoryBlock id="SRAM_UPPER_MIMX8MQ6xxxHZ" name="SRAM_UPPER" addr="20000000" size="00020000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_LOWER_MIMX8MQ6xxxHZ" name="SRAM_LOWER" addr="1ffe0000" size="00020000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="0" ram_size_kb="256"/>
      <package id="MIMX8MQ6CVAHZ" name="MIMX8MQ6CVAHZ"/>
      <evaluation_boards>
        <evaluation_board name="evkmimx8mq"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.attach.slave.release.MIMX8MQ6xxxHZ" name="internal.attach.slave" value="true"/>
            <params id="internal.multi.swd.release.MIMX8MQ6xxxHZ" name="internal.multi.swd" value="true"/>
            <params id="internal.wiretype.release.MIMX8MQ6xxxHZ" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MIMX8MQ6xxxHZ" name="internal.has_swo" value="false"/>
          </params>
          <drivers>
            <driver id_refs="QSPI_FLASH_MIMX8MQ6xxxHZ">
              <driverBinary path="core/devices/MIMX8MQ6/mcuxpresso" type="binary">
                <files mask="flash_driver_placeholder.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
    <device id="MIMX8MQ6xxxJZ" name="MIMX8MQ6" version="1.0.0" full_name="MIMX8MQ6xxxJZ" family="MIMX8MQx" platform="i.MX">
      <description>i.MX 8M: Cortex-A53 up to 1.5GHz and Cortex-M4</description>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
      </metadataSet>
      <core id="cm4_MIMX8MQ6xxxJZ" name="cm4" fpu="true" type="cm4"/>
      <memory>
        <memoryBlock id="SRAM_UPPER_MIMX8MQ6xxxJZ" name="SRAM_UPPER" addr="20000000" size="00020000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_LOWER_MIMX8MQ6xxxJZ" name="SRAM_LOWER" addr="1ffe0000" size="00020000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="0" ram_size_kb="256"/>
      <package id="MIMX8MQ6DVAJZ" name="MIMX8MQ6DVAJZ"/>
      <evaluation_boards>
        <evaluation_board name="evkmimx8mq"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.attach.slave.release.MIMX8MQ6xxxJZ" name="internal.attach.slave" value="true"/>
            <params id="internal.multi.swd.release.MIMX8MQ6xxxJZ" name="internal.multi.swd" value="true"/>
            <params id="internal.wiretype.release.MIMX8MQ6xxxJZ" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MIMX8MQ6xxxJZ" name="internal.has_swo" value="false"/>
          </params>
          <drivers>
            <driver id_refs="QSPI_FLASH_MIMX8MQ6xxxJZ">
              <driverBinary path="core/devices/MIMX8MQ6/mcuxpresso" type="binary">
                <files mask="flash_driver_placeholder.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="project_template.evkmimx8mq.MIMX8MQ6" name="evkmimx8mq" brief="Board_project_template evkmimx8mq" version="1.0.0" full_name="Board_project_template evkmimx8mq" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="core/boards/evkmimx8mq/project_template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.iuart.MIMX8MQ6"/>
          <component_dependency value="component.iuart_adapter.MIMX8MQ6"/>
          <component_dependency value="device.MIMX8MQ6_startup.MIMX8MQ6"/>
          <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
          <component_dependency value="platform.drivers.rdc.MIMX8MQ6"/>
          <component_dependency value="platform.drivers.clock.MIMX8MQ6"/>
          <any_of>
            <all>
              <component_dependency value="utility.debug_console.MIMX8MQ6"/>
              <component_dependency value="component.serial_manager.MIMX8MQ6"/>
            </all>
            <component_dependency value="utility.debug_console_lite.MIMX8MQ6"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS.MIMX8MQ6" name="CMSIS" brief="Cmsis" version="5.6.0" full_name="Cmsis" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="true" type="CMSIS" package_base_path="core/CMSIS" project_base_path="./">
      <dependencies>
        <all>
          <component_dependency value="platform.Include_common.MIMX8MQ6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MQ6"/>
          <component_dependency value="platform.CMSIS_Driver"/>
          <component_dependency value="platform.CMSIS_Driver_Include.CAN_CMSISInclude.MIMX8MQ6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMX8MQ6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.MIMX8MQ6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.MIMX8MQ6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Flash_CMSISInclude.MIMX8MQ6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMX8MQ6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.MCI_CMSISInclude.MIMX8MQ6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.NAND_CMSISInclude.MIMX8MQ6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SAI_CMSISInclude.MIMX8MQ6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMX8MQ6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMX8MQ6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMX8MQ6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.MIMX8MQ6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.MIMX8MQ6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.WiFi_CMSISInclude.MIMX8MQ6"/>
          <component_dependency value="platform.Include_dsp.MIMX8MQ6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.GPIO_CMSISInclude.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="./" project_relative_path="CMSIS" type="doc">
        <files mask="LICENSE.txt"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="cmsis_compiler.h"/>
        <files mask="arm_math.h"/>
        <files mask="core_cm35p.h"/>
        <files mask="core_cm4.h"/>
        <files mask="core_cm0plus.h"/>
        <files mask="mpu_armv8.h"/>
        <files mask="arm_common_tables.h"/>
        <files mask="core_dsp.h"/>
        <files mask="core_cm1.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="core_cm7.h"/>
        <files mask="tz_context.h"/>
        <files mask="cmsis_armcc.h"/>
        <files mask="core_sc000.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="core_sc300.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="core_cm0.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_cm33.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="core_armv81mml.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="core_cm3.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_cm23.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver" name="CMSIS_Driver" brief="Cmsis_driver" version="2.7.1" full_name="Cmsis_driver" user_visible="true" type="CMSIS" package_base_path="core/CMSIS/Driver/DriverTemplates" project_base_path="Driver/DriverTemplates">
      <source relative_path="./" type="src">
        <files mask="Driver_SPI.c"/>
        <files mask="Driver_Flash.c"/>
        <files mask="Driver_USART.c"/>
        <files mask="Driver_SAI.c"/>
        <files mask="Driver_Storage.c"/>
        <files mask="Driver_I2C.c"/>
        <files mask="Driver_ETH_PHY.c"/>
        <files mask="Driver_ETH_MAC.c"/>
        <files mask="Driver_CAN.c"/>
        <files mask="Driver_MCI.c"/>
        <files mask="Driver_USBH.c"/>
        <files mask="Driver_USBD.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.CAN_CMSISInclude.MIMX8MQ6" name="CAN" brief="Cmsis_driver_include can" version="1.2.0" full_name="Cmsis_driver_include can" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_CAN.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MQ6" name="Common" brief="Cmsis_driver_include common" version="2.7.1" full_name="Cmsis_driver_include common" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <source relative_path="./" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMX8MQ6" name="Ethernet" brief="Cmsis_driver_include ethernet" version="2.1.0" full_name="Cmsis_driver_include ethernet" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.MIMX8MQ6" name="Ethernet_MAC" brief="Cmsis_driver_include ethernet_mac" version="2.1.0" full_name="Cmsis_driver_include ethernet_mac" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_MAC.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.MIMX8MQ6" name="Ethernet_PHY" brief="Cmsis_driver_include ethernet_phy" version="2.1.0" full_name="Cmsis_driver_include ethernet_phy" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_PHY.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Flash_CMSISInclude.MIMX8MQ6" name="Flash" brief="Cmsis_driver_include flash" version="2.2.0" full_name="Cmsis_driver_include flash" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_Flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.GPIO_CMSISInclude.MIMX8MQ6" name="GPIO" brief="Cmsis_driver_include gpio" version="2.0.0" full_name="Cmsis_driver_include gpio" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMX8MQ6" name="I2C" brief="Cmsis_driver_include i2c" version="2.3.0" full_name="Cmsis_driver_include i2c" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_I2C.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.MCI_CMSISInclude.MIMX8MQ6" name="MCI" brief="Cmsis_driver_include mci" version="2.3.0" full_name="Cmsis_driver_include mci" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_MCI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.NAND_CMSISInclude.MIMX8MQ6" name="NAND" brief="Cmsis_driver_include nand" version="2.3.0" full_name="Cmsis_driver_include nand" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_NAND.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.SAI_CMSISInclude.MIMX8MQ6" name="SAI" brief="Cmsis_driver_include sai" version="1.1.0" full_name="Cmsis_driver_include sai" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SAI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMX8MQ6" name="SPI" brief="Cmsis_driver_include spi" version="2.2.0" full_name="Cmsis_driver_include spi" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SPI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMX8MQ6" name="USART" brief="Cmsis_driver_include usart" version="2.3.0" full_name="Cmsis_driver_include usart" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USART.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMX8MQ6" name="USB" brief="Cmsis_driver_include usb" version="2.2.0" full_name="Cmsis_driver_include usb" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USB.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.MIMX8MQ6" name="USB_Device" brief="Cmsis_driver_include usb_device" version="2.2.0" full_name="Cmsis_driver_include usb_device" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBD.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.MIMX8MQ6" name="USB_Host" brief="Cmsis_driver_include usb_host" version="2.2.0" full_name="Cmsis_driver_include usb_host" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBH.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.WiFi_CMSISInclude.MIMX8MQ6" name="WiFi" brief="Cmsis_driver_include wifi" version="1.0.0" full_name="Cmsis_driver_include wifi" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_WiFi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.Include_common.MIMX8MQ6" name="CMSIS_Include_common" brief="Cmsis_include_common" version="5.3.0" full_name="Cmsis_include_common" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="true" type="CMSIS_Include" package_base_path="core/CMSIS/Include" project_base_path="CMSIS">
      <source relative_path="./" type="c_include">
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="cmsis_iccarm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_Include_common_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.Include_core_cm4.MIMX8MQ6" name="CMSIS_Include_core_cm4" brief="Cmsis_include_core_cm4" version="5.3.0" full_name="Cmsis_include_core_cm4" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="CMSIS_Include" package_base_path="core/CMSIS/Include" project_base_path="CMSIS">
      <dependencies>
        <all>
          <component_dependency value="platform.Include_common.MIMX8MQ6"/>
          <component_dependency value="platform.Include_dsp.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="core_cm4.h"/>
        <files mask="mpu_armv7.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_Include_core_cm4_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.Include_dsp.MIMX8MQ6" name="CMSIS_Include_dsp" brief="Cmsis_include_dsp" version="1.7.0" full_name="Cmsis_include_dsp" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="true" type="CMSIS_Include" package_base_path="core/CMSIS/Include" project_base_path="CMSIS">
      <source relative_path="./" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_Include_dsp_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="COPY_BSD_License.MIMX8MQ6" name="COPY_BSD_License" brief="COPY of BSD-3-Clause license" version="1.0.0" full_name="COPY of BSD-3-Clause license" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="true" type="other" package_base_path="core/./" project_base_path="src">
      <source relative_path="./" type="other">
        <files mask="COPYING-BSD-3"/>
      </source>
    </component>
    <component id="project_template.MIMX8MQ6.MIMX8MQ6" name="MIMX8MQ6" brief="Devices_project_template MIMX8MQ6" version="1.0.0" full_name="Devices_project_template MIMX8MQ6" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="core/devices/MIMX8MQ6/project_template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.iuart.MIMX8MQ6"/>
          <component_dependency value="component.iuart_adapter.MIMX8MQ6"/>
          <component_dependency value="device.MIMX8MQ6_startup.MIMX8MQ6"/>
          <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
          <component_dependency value="platform.drivers.rdc.MIMX8MQ6"/>
          <component_dependency value="platform.drivers.clock.MIMX8MQ6"/>
          <any_of>
            <all>
              <component_dependency value="utility.debug_console.MIMX8MQ6"/>
              <component_dependency value="component.serial_manager.MIMX8MQ6"/>
            </all>
            <component_dependency value="utility.debug_console_lite.MIMX8MQ6"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="RTE_Device.MIMX8MQ6" name="RTE_Device" brief="Rte_device" version="1.0.0" full_name="Rte_device" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" category="Device/SDK Project Template" user_visible="true" type="project_template" package_base_path="core/devices/MIMX8MQ6/template" project_base_path="board">
      <source relative_path="./" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="tools.MIMX8MQ6" name="cmake_toolchain" brief="Cmake_toolchain" version="1.0.0" full_name="Cmake_toolchain" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="true" type="other" package_base_path="core/tools/cmake_toolchain_files" project_base_path="cmake_toolchain_files">
      <source relative_path="./" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="xcc.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
      </source>
    </component>
    <component id="component.button.MIMX8MQ6" name="button" brief="Component button" version="1.0.0" full_name="Component button" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="software_component" package_base_path="core/components/button" project_base_path="component/button">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
          <component_dependency value="component.timer_manager.MIMX8MQ6"/>
          <component_dependency value="component.igpio_adapter.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_button.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_button.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_wm8524_adapter.MIMX8MQ6" name="codecs_wm8524_adapter" brief="Component wm8524 adapter for multi codecs" version="2.2.0" full_name="Component codec_wm8524_adapter" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="abstraction_layer" package_base_path="core/components/codec/port" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.wm8524.MIMX8MQ6"/>
          <component_dependency value="driver.codec.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8524_adapter.c"/>
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8524_adapter.h"/>
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.common_task.MIMX8MQ6" name="common_task" brief="Component common_task" version="1.0.0" full_name="Component common_task" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="software_component" package_base_path="core/components/common_task" project_base_path="component/common_task">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
          <component_dependency value="component.osa.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_common_task.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_common_task.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.gpt_adapter.MIMX8MQ6" name="gpt_adapter" brief="Component gpt_adapter" version="1.0.0" full_name="Component gpt_adapter" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="abstraction_layer" package_base_path="core/components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
          <component_dependency value="platform.drivers.gpt.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_gpt.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.igpio_adapter.MIMX8MQ6" name="igpio_adapter" brief="Component igpio_adapter" version="1.0.0" full_name="Component igpio_adapter" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="abstraction_layer" package_base_path="core/components/gpio" project_base_path="component/gpio">
      <dependencies>
        <component_dependency value="platform.drivers.igpio.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_igpio.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.iuart_adapter.MIMX8MQ6" name="iuart_adapter" brief="Component iuart_adapter" version="1.0.0" full_name="iuart_adapter" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="utilities" package_base_path="core/components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
          <component_dependency value="platform.drivers.iuart.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_iuart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_iuart_adapter_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.led.MIMX8MQ6" name="led" brief="Component led" version="1.0.0" full_name="Component led" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="software_component" package_base_path="core/components/led" project_base_path="component/led">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
          <component_dependency value="component.timer_manager.MIMX8MQ6"/>
          <component_dependency value="component.igpio_adapter.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_led.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_led.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lists.MIMX8MQ6" name="lists" brief="Component lists" version="1.0.0" full_name="Component lists" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="software_component" package_base_path="core/components/lists" project_base_path="component/lists">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_generic_list.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_generic_list.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_lists_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager.MIMX8MQ6" name="mem_manager" brief="Component mem_manager" version="1.0.0" full_name="Component mem_manager" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="software_component" package_base_path="core/components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
          <component_dependency value="component.lists.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_light.MIMX8MQ6" name="mem_manager_light" brief="Component mem_manager_light" version="1.0.0" full_name="Component mem_manager_light" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="software_component" package_base_path="core/components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
          <component_dependency value="component.lists.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_light.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa.MIMX8MQ6" name="osa" brief="Component osa" version="1.0.0" full_name="Component osa" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="software_component" package_base_path="core/components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
          <component_dependency value="component.lists.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source condition="middleware.baremetal.MIMX8MQ6" relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
      </source>
      <source condition="middleware.baremetal.MIMX8MQ6" relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_bm.MIMX8MQ6" name="osa_bm" brief="Component osa_bm" version="1.0.0" full_name="Component osa_bm" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="false" type="software_component" package_base_path="core/components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
          <component_dependency value="component.lists.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_bm.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.panic.MIMX8MQ6" name="panic" brief="Component panic" version="1.0.0" full_name="Component panic" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="software_component" package_base_path="core/components/panic" project_base_path="component/panic">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
          <component_dependency value="utility.debug_console.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_panic.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_panic.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager.MIMX8MQ6" name="serial_manager" brief="Component serial_manager" version="1.0.0" full_name="Serial Manager" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="utilities" package_base_path="core/components/serial_manager" project_base_path="component/serial_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
          <component_dependency value="component.lists.MIMX8MQ6"/>
          <any_of>
            <component_dependency value="component.serial_manager_uart.MIMX8MQ6"/>
            <component_dependency value="component.serial_manager_swo.MIMX8MQ6"/>
            <component_dependency value="component.serial_manager_virtual.MIMX8MQ6"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_manager.h"/>
        <files mask="fsl_component_serial_port_internal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_swo.MIMX8MQ6" name="serial_manager_swo" brief="Component serial_manager_swo" version="1.0.0" full_name="Serial Manager Swo" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="utilities" package_base_path="core/components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SWO" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
          <component_dependency value="component.serial_manager.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_swo.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_swo.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_uart.MIMX8MQ6" name="serial_manager_uart" brief="Component serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="utilities" package_base_path="core/components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.iuart_adapter.MIMX8MQ6"/>
          <component_dependency value="component.serial_manager.MIMX8MQ6"/>
          <component_dependency value="platform.drivers.iuart.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_uart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_virtual.MIMX8MQ6" name="serial_manager_virtual" brief="Component serial_manager_virtual" version="1.0.0" full_name="Serial Manager Virtual" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="utilities" package_base_path="core/components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMX8MQ6"/>
          <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_virtual.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_virtual.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.software_crc_adapter.MIMX8MQ6" name="software_crc_adapter" brief="Component software_crc_adapter" version="1.0.0" full_name="Component software_crc_adapter" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="abstraction_layer" package_base_path="core/components/crc" project_base_path="component/crc">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_crc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.software_rng_adapter.MIMX8MQ6" name="software_rng_adapter" brief="Component software_rng_adapter" version="1.0.0" full_name="Component software_rng_adapter" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="abstraction_layer" package_base_path="core/components/rng" project_base_path="component/rng">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_rng.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.timer_manager.MIMX8MQ6" name="timer_manager" brief="Component timer_manager" version="1.0.0" full_name="Component timer_manager" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="software_component" package_base_path="core/components/timer_manager" project_base_path="component/timer_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
          <component_dependency value="component.lists.MIMX8MQ6"/>
          <component_dependency value="component.gpt_adapter.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_timer_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_timer_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.wm8524_adapter.MIMX8MQ6" name="codec_wm8524_adapter" brief="Component wm8524 adapter for single codec" version="2.2.0" full_name="Component wm8524_adapter" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="abstraction_layer" package_base_path="core/components/codec/port/wm8524" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.wm8524.MIMX8MQ6"/>
          <component_dependency value="driver.codec.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_wm8524_adapter_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="device.MIMX8MQ6_CMSIS.MIMX8MQ6" name="MIMX8MQ6_CMSIS" brief="Device MIMX8MQ6_cmsis" version="1.0.0" full_name="Device MIMX8MQ6_cmsis" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="CMSIS_Include" package_base_path="core/devices/MIMX8MQ6" project_base_path="device">
      <dependencies>
        <component_dependency value="platform.Include_core_cm4.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_device_registers.h"/>
        <files mask="MIMX8MQ6_cm4.h"/>
        <files mask="MIMX8MQ6_cm4_features.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="device_MIMX8MQ6_CMSIS_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="device.MIMX8MQ6_debugger.MIMX8MQ6" name="MIMX8MQ6_debugger" brief="Device MIMX8MQ6_debugger" version="1.0.0" full_name="Device MIMX8MQ6_debugger" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="true" type="debugger" package_base_path="core/devices/MIMX8MQ6" project_base_path="MIMX8MQ6">
      <source relative_path="./" type="xml">
        <files mask="MIMX8MQ6_cm4.xml"/>
      </source>
    </component>
    <component id="platform.devices.MIMX8MQ6_linker.MIMX8MQ6" name="MIMX8MQ6_linker" brief="Device MIMX8MQ6_linker" version="1.0.0" full_name="Device MIMX8MQ6_linker" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="true" type="linker" package_base_path="core/devices/MIMX8MQ6" project_base_path="MIMX8MQ6">
      <source toolchain="armgcc" relative_path="gcc" type="linker">
        <files mask="MIMX8MQ6xxxHZ_cm4_ram.ld"/>
        <files mask="MIMX8MQ6xxxJZ_cm4_ram.ld"/>
        <files mask="MIMX8MQ6xxxHZ_cm4_ddr_ram.ld"/>
        <files mask="MIMX8MQ6xxxJZ_cm4_ddr_ram.ld"/>
      </source>
    </component>
    <component id="device.MIMX8MQ6_startup.MIMX8MQ6" name="MIMX8MQ6_startup" brief="Device MIMX8MQ6_startup" version="1.0.0" full_name="Device MIMX8MQ6_startup" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" category="Device/Startup" user_visible="true" type="startup" package_base_path="core/devices/MIMX8MQ6" project_base_path="startup">
      <dependencies>
        <component_dependency value="device.MIMX8MQ6_system.MIMX8MQ6"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="gcc" project_relative_path="./" type="asm_include">
        <files mask="startup_MIMX8MQ6_cm4.S"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src_c">
        <files mask="startup_MIMX8MQ6_cm4.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src_cpp">
        <files mask="startup_MIMX8MQ6_cm4.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="device_MIMX8MQ6_startup_MIMX8MQ6.cmake" hidden="true"/>
      </source>
    </component>
    <component id="device.MIMX8MQ6_system.MIMX8MQ6" name="MIMX8MQ6_system" brief="Device MIMX8MQ6_system" version="1.0.0" full_name="Device MIMX8MQ6_system" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="CMSIS_Include" package_base_path="core/devices/MIMX8MQ6" project_base_path="device">
      <dependencies>
        <component_dependency value="device.MIMX8MQ6_CMSIS.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="system_MIMX8MQ6_cm4.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="system_MIMX8MQ6_cm4.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="device_MIMX8MQ6_system_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="docs.MIMX8MQ6.MIMX8MQ6" name="MIMX8MQ6" brief="Docs mimx8mq6" version="1.0.0" full_name="Docs mimx8mq6" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="true" type="documentation" package_base_path="core/docs" project_base_path="docs">
      <source relative_path="./" type="doc">
        <files mask="Getting Started with MCUXpresso SDK for EVK-MIMX8MQ.pdf"/>
        <files mask="MCUXpresso SDK Release Notes for EVK-MIMX8MQ.pdf"/>
      </source>
    </component>
    <component id="platform.drivers.cache_lmem.MIMX8MQ6" name="cache_lmem" brief="CACHE LMEM Driver" version="2.0.5" full_name="CACHE LMEM Driver" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="driver" package_base_path="core/drivers/cache/lmem" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_cache_lmem_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.clock.MIMX8MQ6" name="clock" brief="Clock Driver" version="2.3.1" full_name="Clock Driver" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="driver" package_base_path="core/devices/MIMX8MQ6/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_clock_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.codec.MIMX8MQ6" name="codec" brief="Driver codec" version="2.2.1" full_name="Driver codec" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="abstraction_layer" package_base_path="core/components/codec" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
          <any_of>
            <component_dependency value="component.wm8524_adapter.MIMX8MQ6"/>
            <component_dependency value="component.codec_wm8524_adapter.MIMX8MQ6"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_codec_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.common.MIMX8MQ6" name="common" brief="COMMON Driver" version="2.2.9" full_name="COMMON Driver" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="driver" package_base_path="core/drivers/common" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.clock.MIMX8MQ6"/>
          <component_dependency value="device.MIMX8MQ6_CMSIS.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_common_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ecspi.MIMX8MQ6" name="ecspi" brief="ECSPI Driver" version="2.2.0" full_name="ECSPI Driver" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="driver" package_base_path="core/drivers/ecspi" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ecspi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ecspi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_ecspi_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.gpt.MIMX8MQ6" name="gpt" brief="GPT Driver" version="2.0.2" full_name="GPT Driver" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="driver" package_base_path="core/drivers/gpt" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_gpt.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpt.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_gpt_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.igpio.MIMX8MQ6" name="gpio" brief="GPIO Driver" version="2.0.5" full_name="igpio" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="driver" package_base_path="core/drivers/igpio" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_igpio_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ii2c.MIMX8MQ6" name="i2c" brief="I2C Driver" version="2.0.7" full_name="I2C Driver" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="true" type="driver" package_base_path="core/drivers/ii2c" project_base_path="drivers">
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_ii2c_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.iomuxc.MIMX8MQ6" name="iomuxc" brief="IOMUXC Driver" version="2.0.0" full_name="IOMUXC Driver" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="driver" package_base_path="core/devices/MIMX8MQ6/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iomuxc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ipwm.MIMX8MQ6" name="ipwm" brief="PWM Driver" version="2.0.1" full_name="PWM Driver" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="true" type="driver" package_base_path="core/drivers/ipwm" project_base_path="drivers">
      <source relative_path="./" type="c_include">
        <files mask="fsl_pwm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pwm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_ipwm_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.iuart.MIMX8MQ6" name="iuart" brief="IUART Driver" version="2.2.1" full_name="IUART Driver" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="true" type="driver" package_base_path="core/drivers/iuart" project_base_path="drivers">
      <source relative_path="./" type="c_include">
        <files mask="fsl_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_uart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_iuart_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mu.MIMX8MQ6" name="mu" brief="MU Driver" version="2.0.6" full_name="MU Driver" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="driver" package_base_path="core/drivers/mu" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mu.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.qspi.MIMX8MQ6" name="qspi" brief="QSPI Driver" version="2.2.2" full_name="QSPI Driver" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="driver" package_base_path="core/drivers/qspi" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_qspi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_qspi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_qspi_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rdc.MIMX8MQ6" name="rdc" brief="RDC Driver" version="2.1.1" full_name="RDC Driver" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="driver" package_base_path="core/drivers/rdc" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rdc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rdc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_rdc_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rdc_sema42.MIMX8MQ6" name="rdc_sema42" brief="RDC SEMA42 Driver" version="2.0.3" full_name="RDC SEMA42 Driver" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="true" type="driver" package_base_path="core/drivers/rdc_sema42" project_base_path="drivers">
      <source relative_path="./" type="c_include">
        <files mask="fsl_rdc_sema42.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rdc_sema42.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_rdc_sema42_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sai.MIMX8MQ6" name="sai" brief="SAI Driver" version="2.3.2" full_name="SAI Driver" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="driver" package_base_path="core/drivers/sai" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sai.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sai.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_sai_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sema4.MIMX8MQ6" name="sema4" brief="SEMA4 Driver" version="2.0.2" full_name="SEMA4 Driver" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="driver" package_base_path="core/drivers/sema4" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sema4.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sema4.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_sema4_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.tmu.MIMX8MQ6" name="tmu" brief="TMU Driver" version="2.0.3" full_name="TMU Driver" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="driver" package_base_path="core/drivers/tmu" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_tmu.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tmu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_tmu_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.wdog01.MIMX8MQ6" name="wdog" brief="wdog01 Driver" version="2.1.1" full_name="wdog01 Driver" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="driver" package_base_path="core/drivers/wdog01" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wdog.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wdog.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_wdog01_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8524.MIMX8MQ6" name="wm8524" brief="Driver wm8524" version="2.1.1" full_name="Driver wm8524" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="software_component" package_base_path="core/components/codec/wm8524" project_base_path="codec">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8524.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8524.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_wm8524_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.baremetal.MIMX8MQ6" name="baremetal" brief="Middleware baremetal" version="1.0.0" full_name="Baremetal" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="true" type="OS" package_base_path="core/middleware" project_base_path="middleware">
      <defines>
        <define name="FSL_RTOS_BM" value=""/>
        <define name="SDK_OS_BAREMETAL" value=""/>
      </defines>
    </component>
    <component id="middleware.multicore.remoteproc.loadscript.MIMX8MQ6" name="remoteproc_load_script" brief="remoteproc-load script" version="1.0.0" full_name="remoteproc-load script" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="true" type="other" package_base_path="core/middleware/multicore" project_base_path="multicore">
      <source relative_path="tools/remoteproc-load" type="script">
        <files mask="load.sh"/>
      </source>
      <source relative_path="tools/remoteproc-load" type="other">
        <files mask="Readme.md"/>
        <files mask="remote.cfg"/>
      </source>
    </component>
    <component id="middleware.usb.common_header.MIMX8MQ6" name="USB Common Header" brief="Middleware usb common_header" version="2.7.0" full_name="USB Common Header" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" category="USB/USB Common Header" user_visible="true" type="middleware" package_base_path="core/middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="component.osa.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.common_header.MIMX8MQ6" name="USB Device Common Header" brief="Middleware usb device common_header" version="2.7.0" full_name="USB Device Common Header" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="core/middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMX8MQ6"/>
          <component_dependency value="middleware.usb.common_header.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="device" project_relative_path="device/include" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source relative_path="device" project_relative_path="device/source" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <include_paths>
        <include_path relative_path="device" project_relative_path="device/include" type="c_include"/>
        <include_path relative_path="device" project_relative_path="device/source" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.misc_utilities.MIMX8MQ6" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.0.0" full_name="Utilities miscellaneous" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" user_visible="true" type="utilities" package_base_path="core/utilities/misc_utilities" project_base_path="utilities">
      <source toolchain="armgcc" relative_path="./" type="src">
        <files mask="fsl_sbrk.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="utilities_misc_utilities_MIMX8MQ6.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.utilities.assert.MIMX8MQ6" name="assert" brief="Utility assert" version="1.0.0" full_name="Utility assert" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="utilities" package_base_path="core/utilities/assert" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
    </component>
    <component id="platform.utilities.assert_lite.MIMX8MQ6" name="assert_lite" brief="Utility assert_lite" version="1.0.0" full_name="Utility assert_lite" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="utilities" package_base_path="core/utilities/assert" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console_lite.MIMX8MQ6"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="utility_assert_lite_MIMX8MQ6.cmake" hidden="true"/>
      </source>
    </component>
    <component id="utility.debug_console.MIMX8MQ6" name="debug_console" brief="Utility debug_console" version="1.0.0" full_name="Utility debug_console" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="utilities" package_base_path="core/utilities/debug_console" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMX8MQ6"/>
          <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="str" project_relative_path="./" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source relative_path="str" project_relative_path="./" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="str" project_relative_path="./" type="c_include"/>
        <include_path relative_path="debug_console" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console_lite.MIMX8MQ6" name="debug_console_lite" brief="Utility debug_console_lite" version="1.0.0" full_name="Utility debug_console_lite" devices="MIMX8MQ6xxxHZ MIMX8MQ6xxxJZ" device_cores="cm4_MIMX8MQ6xxxHZ cm4_MIMX8MQ6xxxJZ" user_visible="true" type="utilities" package_base_path="core/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.iuart_adapter.MIMX8MQ6"/>
          <component_dependency value="platform.drivers.common.MIMX8MQ6"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="utility_debug_console_lite_MIMX8MQ6.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
  </components>
</ksdk:manifest>
