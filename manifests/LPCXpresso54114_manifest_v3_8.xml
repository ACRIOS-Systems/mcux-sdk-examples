<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_SUPER" name="SDKVersion 2.9.0 SuperSet" brief="This is SDK version 2.9.0 manifest file." format_version="3.8" api_version="2.0.0" configuration="37bbf4eb706f3814bfad8f3a27525c83" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.8.xsd">
  <!--Timestamp (UTC): 2021-03-09 13:42:36.960331-->
  <!--This manifest is generated based on sdk repo commit: b1eede1d406d3392a45a06abc2494c2b87a1853b-->
  <defines>
    <define name="CPU_$|package|" value=""/>
    <define name="CPU_$|package|_$|core|" value=""/>
    <define name="CPU_$|package|_$|core_name|" value=""/>
  </defines>
  <ksdk id="MCUXpressoSDK290" name="MCUXpressoSDK290" version="2.9.0"/>
  <compilers>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
  </compilers>
  <core_slave_roles_definitions>
    <slave_role id="M0SLAVE" name="Cortex-M0 acts as slave by default"/>
  </core_slave_roles_definitions>
  <toolchainSettings>
    <toolchainSetting id="com.nxp.mcuxpresso" name="mcuxpresso" version="11.3.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" toolchain="mcuxpresso">
      <option id="gnu.cpp.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.c.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.cpp.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.cpp.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="gnu.c.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
    </toolchainSetting>
  </toolchainSettings>
  <toolchains>
    <toolchain id="armgcc" name="GCC_ARM_Embedded" version="9.3.1" full_name="GCC ARM Embedded" compiler="compiler_gcc" type="armgcc" vendor="GCC ARM Embedded" vendor_url="http://launchpad.net/gcc-arm-embedded"/>
    <toolchain id="mcuxpresso" name="MCUXpresso_IDE" version="11.3.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" type="mcuxpresso" vendor="NXP Semiconductors" vendor_url="http://www.nxp.com">
      <debug>
        <debug_configuration id="com.crt.advproject.config.exe.release" name="Release Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.release.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.release.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.crt.advproject.config.exe.debug" name="Debug Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.debug.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.debug.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.debug" name="Debug Configuration" probe="Segger"/>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.release" name="Release Configuration" probe="Segger"/>
      </debug>
    </toolchain>
  </toolchains>
  <boards>
    <board id="lpcxpresso54114" name="LPCXpresso54114" href="https://www.nxp.com/pip/OM13089" version="1.0.0" package="LPC54114J256BD64">
      <description>LPCXpresso Development Board for the LPC5411x family of MCUs</description>
      <image path="core/boards/lpcxpresso54114" type="image">
        <files mask="lpcxpresso54114.png"/>
      </image>
      <examples>
        <example id="lpcxpresso54114_mailbox_interrupt_cm0plus" name="mailbox_interrupt_cm0plus" brief="The mailbox_interrupt example shows how to use mailbox to exchange message.In this example:The core 0(CM4) writes value to mailbox for Core 1(CM0+), it causes mailbox interrupton CM0+ side. CM0+ reads value from mailbox increments and writes it to mailbox registerfor CM4, it causes mailbox interrupt on CM4 side. CM4 reads value from mailbox incrementsand writes it to mailbox register for CM0 again." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/mailbox" path="examples/lpcxpresso54114/driver_examples/mailbox/interrupt/cm0plus">
          <external path="examples/lpcxpresso54114/driver_examples/mailbox/interrupt/cm0plus" type="xml">
            <files mask="mailbox_interrupt_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_mailbox_mutex_cm0plus" name="mailbox_mutex_cm0plus" brief="The mailbox_mutex example shows how to use mailbox mutex.In this example:The core 0 sends address of shared variable to core 1 by mailbox.Both cores trying to get mutex in while loop, after that updates shared variableand sets mutex, to allow access other core to shared variable." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/mailbox" path="examples/lpcxpresso54114/driver_examples/mailbox/mutex/cm0plus">
          <external path="examples/lpcxpresso54114/driver_examples/mailbox/mutex/cm0plus" type="xml">
            <files mask="mailbox_mutex_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_crc" name="crc" brief="The CRC Example project is a demonstration program that uses the KSDK software to generate checksumsfor an ASCII string. Several CRC protocols are implemented using the CRC driver API." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples" path="examples/lpcxpresso54114/driver_examples/crc/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/crc/cm4" type="xml">
            <files mask="crc_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_ctimer_match_example" name="ctimer_match_example" brief="The CTimer Example project is to demonstrate usage of the KSDK ctimer driver.In this example, the match feature of the CTimer is used to toggle the output level." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/ctimer" path="examples/lpcxpresso54114/driver_examples/ctimer/simple_match/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/ctimer/simple_match/cm4" type="xml">
            <files mask="ctimer_match_example_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_ctimer_match_interrupt_example" name="ctimer_match_interrupt_example" brief="The Simple Match Interrupt project is to demonstrate usage of the SDK CTimer driver with interrupt callback functionsIn this example the upon match and IO pin connected to the LED is toggled and the timer is reset, so it would generate a square wave.With an interrupt callback the match value is changed frequently in such a way that the frequency of the output square wave is increased gradually." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/ctimer" path="examples/lpcxpresso54114/driver_examples/ctimer/simple_match_interrupt/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/ctimer/simple_match_interrupt/cm4" type="xml">
            <files mask="ctimer_match_interrupt_example_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_ctimer_pwm_example" name="ctimer_pwm_example" brief="The CTimer Example project is to demonstrate usage of the KSDK ctimer driver.In this example, CTimer is used to generate a PWM signal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/ctimer" path="examples/lpcxpresso54114/driver_examples/ctimer/simple_pwm/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/ctimer/simple_pwm/cm4" type="xml">
            <files mask="ctimer_pwm_example_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_ctimer_pwm_interrupt_example" name="ctimer_pwm_interrupt_example" brief="The Simple PWM Interrupt project is to demonstrate usage of the SDK CTimer driver as a PWM with interrupt callback functionsIn this example an IO pin connected to the LED is used as a PWM output line to generate a PWM signal.With an interrupt callback the PWM duty cycle is changed frequently in such a way that the LED brightness can be varied." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/ctimer" path="examples/lpcxpresso54114/driver_examples/ctimer/simple_pwm_interrupt/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/ctimer/simple_pwm_interrupt/cm4" type="xml">
            <files mask="ctimer_pwm_interrupt_example_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dma_channel_chain" name="dma_channel_chain" brief="The DMA channel chain example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the DMA channel chain feature." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/dma" path="examples/lpcxpresso54114/driver_examples/dma/channel_chain/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/dma/channel_chain/cm4" type="xml">
            <files mask="dma_channel_chain_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dma_interleave_transfer" name="dma_interleave_transfer" brief="The DMA interleave transfer example is a simple demonstration program that uses the SDK software.It executes a linked transfer from source buffer to destination buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA interleave feature." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/dma" path="examples/lpcxpresso54114/driver_examples/dma/interleave_transfer/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/dma/interleave_transfer/cm4" type="xml">
            <files mask="dma_interleave_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dma_linked_transfer" name="dma_linked_transfer" brief="The DMA linked transfer example is a simple demonstration program that uses the SDK software.It executes a linked transfer from source buffer to destination buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA and to provide a linked trnasfer example." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/dma" path="examples/lpcxpresso54114/driver_examples/dma/linked_transfer/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/dma/linked_transfer/cm4" type="xml">
            <files mask="dma_linked_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dma_m2m_polling" name="dma_m2m_polling" brief="The DMA memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot polling transfer from source buffer to destination buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA and to provide a simple example for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/dma" path="examples/lpcxpresso54114/driver_examples/dma/m2m_polling/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/dma/m2m_polling/cm4" type="xml">
            <files mask="dma_m2m_polling_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dma_memory_to_memory" name="dma_memory_to_memory" brief="The DMA memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA and to provide a simple example fordebugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/dma" path="examples/lpcxpresso54114/driver_examples/dma/memory_to_memory/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/dma/memory_to_memory/cm4" type="xml">
            <files mask="dma_memory_to_memory_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dma_wrap_transfer" name="dma_wrap_transfer" brief="The DMA wrap transfer example is a simple demonstration program that uses the SDK software.It executes a wrap transfer from source buffer to destination buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA wrap feature." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/dma" path="examples/lpcxpresso54114/driver_examples/dma/wrap_transfer/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/dma/wrap_transfer/cm4" type="xml">
            <files mask="dma_wrap_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dmic_dma" name="dmic_dma" brief="This example shows how to use DMA to transfer data from DMIC to memory." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/dmic" path="examples/lpcxpresso54114/driver_examples/dmic/dmic_dma/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/dmic/dmic_dma/cm4" type="xml">
            <files mask="dmic_dma_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dmic_hwvad" name="dmic_hwvad" brief="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~This demo explains how built in HWVAD( HW voice activity detector) in LPC5411x can be used towake up the device from sleep mode" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/dmic" path="examples/lpcxpresso54114/driver_examples/dmic/dmic_hwvad/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/dmic/dmic_hwvad/cm4" type="xml">
            <files mask="dmic_hwvad_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dmic_i2s_codec" name="dmic_i2s_codec" brief="Demonstrates the DMIC working with I2S. Audio is converted to samples in the DMIC module.Then, the data is placed into the I2S buffer. Last, it is read from the I2S buffer and sentto the CODEC, then the audio data will be output to Lineout of CODEC.~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/dmic" path="examples/lpcxpresso54114/driver_examples/dmic/dmic_i2s_codec/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/dmic/dmic_i2s_codec/cm4" type="xml">
            <files mask="dmic_i2s_codec_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_dmic_i2s_dma" name="dmic_i2s_dma" brief="Demonstrates the DMIC working with I2S. Audio is converted to samples in the DMIC module.Then, the data is placed memory buffer. Last, it is send data to the I2S buffer and send to the CODEC, then the audio data will be output to Lineout of CODEC.~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/dmic" path="examples/lpcxpresso54114/driver_examples/dmic/dmic_i2s_dma/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/dmic/dmic_i2s_dma/cm4" type="xml">
            <files mask="dmic_i2s_dma_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_flashiap" name="flashiap" brief="The FLASIAP project is a simple demonstration program of the SDK FLASIAP driver. It erases and programs a portion of on-chip flash memory. A message a printed on the UART terminal as various operations on flash memory are performed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples" path="examples/lpcxpresso54114/driver_examples/flashiap/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/flashiap/cm4" type="xml">
            <files mask="flashiap_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_fmeas" name="fmeas" brief="This example shows how to use SDK drivers to use the Frequency Measure feature of SYSCON module on LPC devices.It shows how to measure a target frequency using a (faster) reference frequency. The example uses the internal main clock as the reference frequency to measure the frequencies of the RTC, watchdog oscillator, and internal RC oscillator." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples" path="examples/lpcxpresso54114/driver_examples/fmeas/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/fmeas/cm4" type="xml">
            <files mask="fmeas_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_gint" name="gint" brief="This example shows how to use SDK drivers to use the Group GPIO input interrupt peripheral." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples" path="examples/lpcxpresso54114/driver_examples/gint/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/gint/cm4" type="xml">
            <files mask="gint_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_gpio_led_output" name="gpio_led_output" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs. The example use LEDs and buttons to demonstrates GPIO API for port and pin manipulation (init, set,clear, and toggle)." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/gpio" path="examples/lpcxpresso54114/driver_examples/gpio/led_output/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/gpio/led_output/cm4" type="xml">
            <files mask="gpio_led_output_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_hello_world" name="hello_world" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/lpcxpresso54114/demo_apps/hello_world/cm4">
          <external path="examples/lpcxpresso54114/demo_apps/hello_world/cm4" type="xml">
            <files mask="hello_world_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_i2c_dma_b2b_transfer_master" name="i2c_dma_b2b_transfer_master" brief="The i2c_dma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with DMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="examples/lpcxpresso54114/driver_examples/i2c/dma_b2b_transfer/master/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/i2c/dma_b2b_transfer/master/cm4" type="xml">
            <files mask="i2c_dma_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_i2c_dma_b2b_transfer_slave" name="i2c_dma_b2b_transfer_slave" brief="The i2c_dma_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a DMA master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="examples/lpcxpresso54114/driver_examples/i2c/dma_b2b_transfer/slave/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/i2c/dma_b2b_transfer/slave/cm4" type="xml">
            <files mask="i2c_dma_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_i2c_interrupt_b2b_transfer_master" name="i2c_interrupt_b2b_transfer_master" brief="The i2c_interrupt_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="examples/lpcxpresso54114/driver_examples/i2c/interrupt_b2b_transfer/master/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/i2c/interrupt_b2b_transfer/master/cm4" type="xml">
            <files mask="i2c_interrupt_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_i2c_interrupt_b2b_transfer_slave" name="i2c_interrupt_b2b_transfer_slave" brief="The i2c_interrupt_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with interrupt:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="examples/lpcxpresso54114/driver_examples/i2c/interrupt_b2b_transfer/slave/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/i2c/interrupt_b2b_transfer/slave/cm4" type="xml">
            <files mask="i2c_interrupt_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_i2c_polling_b2b_master" name="i2c_polling_b2b_master" brief="The i2c_polling_b2b_master example shows how to use i2c driver as master to do board to board transfer using polling method:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="examples/lpcxpresso54114/driver_examples/i2c/polling_b2b/master/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/i2c/polling_b2b/master/cm4" type="xml">
            <files mask="i2c_polling_b2b_master_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_i2c_polling_b2b_slave" name="i2c_polling_b2b_slave" brief="The i2c_polling_b2b_slave example shows how to use i2c driver as slave to do board to board transfer with a polling master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2c" path="examples/lpcxpresso54114/driver_examples/i2c/polling_b2b/slave/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/i2c/polling_b2b/slave/cm4" type="xml">
            <files mask="i2c_polling_b2b_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_i2s_dma_record_playback" name="i2s_dma_record_playback" brief="The I2S example project uses one I2S interface to continuously record input sound to a bufferand another I2S interface to playback the buffer to output - digital loopback.It requires NXP Mic/Audio/Oled Shield with WM8904 codec.It needs to have 1-2 connected on JP3." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2s" path="examples/lpcxpresso54114/driver_examples/i2s/dma_record_playback/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/i2s/dma_record_playback/cm4" type="xml">
            <files mask="i2s_dma_record_playback_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_i2s_dma_transfer" name="i2s_dma_transfer" brief="The I2S example project uses one I2S interface to continuously record input sound to a bufferand another I2S interface to playback the buffer to output - digital loopback.It requires NXP Mic/Audio/Oled Shield with WM8904 codec.It needs to have 1-2 connected on JP3." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2s" path="examples/lpcxpresso54114/driver_examples/i2s/dma_transfer/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/i2s/dma_transfer/cm4" type="xml">
            <files mask="i2s_dma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_i2s_interrupt_record_playback" name="i2s_interrupt_record_playback" brief="The I2S example project uses one I2S interface to continuously record input sound to a bufferand another I2S interface to playback the buffer to output - digital loopback.It requires NXP Mic/Audio/Oled Shield with WM8904 codec.It needs to have 1-2 connected on JP3." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2s" path="examples/lpcxpresso54114/driver_examples/i2s/interrupt_record_playback/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/i2s/interrupt_record_playback/cm4" type="xml">
            <files mask="i2s_interrupt_record_playback_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_i2s_interrupt_transfer" name="i2s_interrupt_transfer" brief="The I2S example project uses one I2S interface to continuously record input sound to a bufferand another I2S interface to playback the buffer to output - digital loopback.It requires NXP Mic/Audio/Oled Shield with WM8904 codec.It needs to have 1-2 connected on JP3." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/i2s" path="examples/lpcxpresso54114/driver_examples/i2s/interrupt_transfer/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/i2s/interrupt_transfer/cm4" type="xml">
            <files mask="i2s_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_iap_flash" name="iap_flash" brief="The IAP Flash project is a simple demonstration program of the SDK IAP driver. It erases and programs a portion of on-chip flash memory. A message a printed on the UART terminal as various operations on flash memory are performed." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples" path="examples/lpcxpresso54114/driver_examples/iap/iap_flash/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/iap/iap_flash/cm4" type="xml">
            <files mask="iap_flash_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_led_blinky" name="led_blinky" brief="The LED Blinky demo application provides a sanity check for the new SDK build environments and board bring up. The LED Blinky demo uses the systick interrupt to realize the function of timing delay. The example takes turns to shine the LED. The purpose of this demo is to provide a simple project for debugging and further development." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="demo_apps" path="examples/lpcxpresso54114/demo_apps/led_blinky/cm4">
          <external path="examples/lpcxpresso54114/demo_apps/led_blinky/cm4" type="xml">
            <files mask="led_blinky_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_lpc_adc_basic" name="lpc_adc_basic" brief="The lpc_adc_basic example shows how to use LPC ADC driver in the simplest way.In this example, the internal temperature sensor is used to created the input analog signal. When user type in any key from the keyboard, the software trigger API is called to start the conversion. Then it polls the conversion sequence A's flag till the conversion is completed. When the conversion is completed, just print the conversion result to terminal.Project Information1.what are ADC conversion sequences?  A conversion sequence is a single pass through a series of A/D conversions performed on a selected set of  A/D channels. Software can set-up two independent conversion sequences, either of which can be triggered   by software or by a transition on one of the hardware triggers. Each sequence can be triggered by a different   hardware trigger. One of these conversion sequences is referred to as the A sequence and the other as the B  sequence. It is not necessary to employ both sequences. An optional single-step mode allows advancing through  the channels of a sequence one at a time on each successive occurrence of a trigger. The user can select whether  a trigger on the B sequence can interrupt an already-in-progress A sequence. The B sequence, however, can never be  interrupted by an A trigger.  2. How to use software-triggered conversion?   There are two ways that software can trigger a conversion sequence:      1. Start Bit: The first way to software-trigger an sequence is by setting the START bit in         the corresponding SEQn_CTRL register. The response to this is identical to         occurrence of a hardware trigger on that sequence. Specifically, one cycle of         conversions through that conversion sequence will be immediately triggered except         as indicated above. (In this example, we use this way.)      2. Burst Mode: The other way to initiate conversions is to set the BURST bit in the         SEQn_CTRL register. As long as this bit is 1 the designated conversion sequence will         be continuously and repetitively cycled through. Any new software or hardware trigger         on this sequence will be ignored.  Program Flow1.This example demonstrates how to configure the A sequences with polling, assigning one channel with software  trigger, you can configure channel via &quot;DEMO_ADC_SAMPLE_CHANNEL_NUMBER&quot;.  2.Before configuration of the ADC begins, the ADC is put through a self-calibration cycle.    3.After ADC channels are assigned to each of the sequences, the software trigger is chosen. Setting   SEQA_CTRL_START to '1' will trigger sequence A.  4.After ADC channels are assigned to each of the sequences, if the user enters any key via terminal, software trigger will start. 5.Read the corresponding DATAVALID field with polling to judge whether the conversion completes and the result is ready.  If the result is ready, the example will printf result information to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/adc" path="examples/lpcxpresso54114/driver_examples/adc/lpc_adc_basic/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/adc/lpc_adc_basic/cm4" type="xml">
            <files mask="lpc_adc_basic_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_lpc_adc_burst" name="lpc_adc_burst" brief="The lpc_adc_burst example shows how to use LPC ADC driver with the burst mode.In this example, the internal temperature sensor is used to created the input analog signal.When user type in any key from the keyboard, the burst mode is enabled. Then the conversion sequence A would be started automatically, till the burst would be disabled in conversion completed ISR. Project Information1.what are ADC conversion sequences?  A conversion sequence is a single pass through a series of A/D conversions performed on a selected set of  A/D channels. Software can set-up two independent conversion sequences, either of which can be triggered   by software or by a transition on one of the hardware triggers. Each sequence can be triggered by a different   hardware trigger. One of these conversion sequences is referred to as the A sequence and the other as the B  sequence. It is not necessary to employ both sequences. An optional single-step mode allows advancing through  the channels of a sequence one at a time on each successive occurrence of a trigger. The user can select whether  a trigger on the B sequence can interrupt an already-in-progress A sequence. The B sequence, however, can never be  interrupted by an A trigger.  2. How to use software-triggered conversion?   There are two ways that software can trigger a conversion sequence:      1. Start Bit: The first way to software-trigger an sequence is by setting the START bit in         the corresponding SEQn_CTRL register. The response to this is identical to         occurrence of a hardware trigger on that sequence. Specifically, one cycle of         conversions through that conversion sequence will be immediately triggered except         as indicated above.       2. Burst Mode: The other way to initiate conversions is to set the BURST bit in the         SEQn_CTRL register. As long as this bit is 1 the designated conversion sequence will         be continuously and repetitively cycled through. Any new software or hardware trigger         on this sequence will be ignored. (In this example, we use this way.)         3. What kinds of interrupt do ADC have?   There are four interrupts that can be generated by the ADC:     • Conversion-Complete or Sequence-Complete interrupts for sequences A and B     • Threshold-Compare Out-of-Range Interrupt     • Data Overrun Interrupt   Any of these interrupt requests may be individually enabled or disabled in the INTEN register.  Program Flow1.This example demonstrates how to configure the A sequences with burst mode, you can configure channel via   &quot;DEMO_ADC_SAMPLE_CHANNEL_NUMBER&quot;.  2.Before configuration of the ADC begins, the ADC is put through a self-calibration cycle.  3.Enable the Conversion-Complete or Sequence-Complete interrupt for sequences A.  4.After ADC channels are assigned to each of the sequences, if the user enters any key via terminal, burst mode will start.    5.When the first conversion completes, the interrupt would be triggered. The ISR will stop the burst mode and print conversion result   to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/adc" path="examples/lpcxpresso54114/driver_examples/adc/lpc_adc_burst/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/adc/lpc_adc_burst/cm4" type="xml">
            <files mask="lpc_adc_burst_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_lpc_adc_dma" name="lpc_adc_dma" brief="The lpc_adc_dma example shows how to use LPC ADC driver with DMA.In this example, the internal temperature sensor is used to created the input analog signal. When user type in any key from the keyboard, the software trigger API is called to start the conversion. When the ADC conversion is completed, it would trigger the DMA to move the ADC conversion result from ADC conversion data register to user indicated memory. Then the main loop waits for the transfer to be done and print the result to terminal.Project Information1.what are ADC conversion sequences?  A conversion sequence is a single pass through a series of A/D conversions performed on a selected set of  A/D channels. Software can set-up two independent conversion sequences, either of which can be triggered   by software or by a transition on one of the hardware triggers. Each sequence can be triggered by a different   hardware trigger. One of these conversion sequences is referred to as the A sequence and the other as the B  sequence. It is not necessary to employ both sequences. An optional single-step mode allows advancing through  the channels of a sequence one at a time on each successive occurrence of a trigger. The user can select whether  a trigger on the B sequence can interrupt an already-in-progress A sequence. The B sequence, however, can never be  interrupted by an A trigger.  2. How to use software-triggered conversion?   There are two ways that software can trigger a conversion sequence:      1. Start Bit: The first way to software-trigger an sequence is by setting the START bit in         the corresponding SEQn_CTRL register. The response to this is identical to         occurrence of a hardware trigger on that sequence. Specifically, one cycle of         conversions through that conversion sequence will be immediately triggered except         as indicated above. (In this example, we use this way.)      2. Burst Mode: The other way to initiate conversions is to set the BURST bit in the         SEQn_CTRL register. As long as this bit is 1 the designated conversion sequence will         be continuously and repetitively cycled through. Any new software or hardware trigger         on this sequence will be ignored.          3. How to use DMA to work with ADC?   The sequence-A or sequence-B conversion/sequence-complete interrupts may also be   used to generate a DMA trigger. To trigger a DMA transfer, the same conditions must be   met as the conditions for generating an interrupt.   Remark: If the DMA is used, the ADC interrupt must be disabled in the NVIC.   Program Flow1.This example demonstrates how to configure the A sequences with interrupt, assigning one channel with software  trigger, you can configure channel via &quot;DEMO_ADC_SAMPLE_CHANNEL_NUMBER&quot;.  2.Before configuration of the ADC begins, the ADC is put through a self-calibration cycle.  3.Configure the DMA and DMAMUX to work with ADC sequences.4.Enable the Conversion-Complete or Sequence-Complete DMA for sequences A.  5.After ADC channels are assigned to each of the sequences, if the user enters any key via terminal, software trigger will start.    6.When the conversion completes, the DMA would be requested.7.When the DMA transfer completes, DMA will trigger a interrupt. ISR would set the &quot;bDmaTransferDone&quot; to 'true'. Then main function will   print conversion result to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/adc" path="examples/lpcxpresso54114/driver_examples/adc/lpc_adc_dma/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/adc/lpc_adc_dma/cm4" type="xml">
            <files mask="lpc_adc_dma_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_lpc_adc_interrupt" name="lpc_adc_interrupt" brief="The lpc_adc_interrupt example shows how to use interrupt with LPC ADC driver.In this example, the internal temperature sensor is used to created the input analog signal. When user type in any key from the keyboard, the software trigger API is called to start the conversion. Then it polls the flag variable which would be asserted when the conversion completed ISR is executed. Then just print the conversion result to terminal.Project Information1.what are ADC conversion sequences?  A conversion sequence is a single pass through a series of A/D conversions performed on a selected set of  A/D channels. Software can set-up two independent conversion sequences, either of which can be triggered   by software or by a transition on one of the hardware triggers. Each sequence can be triggered by a different   hardware trigger. One of these conversion sequences is referred to as the A sequence and the other as the B  sequence. It is not necessary to employ both sequences. An optional single-step mode allows advancing through  the channels of a sequence one at a time on each successive occurrence of a trigger. The user can select whether  a trigger on the B sequence can interrupt an already-in-progress A sequence. The B sequence, however, can never be  interrupted by an A trigger.  2. How to use software-triggered conversion?   There are two ways that software can trigger a conversion sequence:      1. Start Bit: The first way to software-trigger an sequence is by setting the START bit in         the corresponding SEQn_CTRL register. The response to this is identical to         occurrence of a hardware trigger on that sequence. Specifically, one cycle of         conversions through that conversion sequence will be immediately triggered except         as indicated above. (In this example, we use this way.)      2. Burst Mode: The other way to initiate conversions is to set the BURST bit in the         SEQn_CTRL register. As long as this bit is 1 the designated conversion sequence will         be continuously and repetitively cycled through. Any new software or hardware trigger         on this sequence will be ignored.          3. What kinds of interrupt do ADC have?   There are four interrupts that can be generated by the ADC:     • Conversion-Complete or Sequence-Complete interrupts for sequences A and B     • Threshold-Compare Out-of-Range Interrupt     • Data Overrun Interrupt   Any of these interrupt requests may be individually enabled or disabled in the INTEN register.  Program Flow1.This example demonstrates how to configure the A sequences with interrupt, assigning one channel with software  trigger, you can configure channel via &quot;DEMO_ADC_SAMPLE_CHANNEL_NUMBER&quot;.  2.Before configuration of the ADC begins, the ADC is put through a self-calibration cycle.  3.Enable the Conversion-Complete or Sequence-Complete interrupt for sequences A.  4.After ADC channels are assigned to each of the sequences, if the user enters any key via terminal, software trigger will start.    5.When the conversion completes, the interrupt would be triggered. The ISR will print conversion result to terminal." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/adc" path="examples/lpcxpresso54114/driver_examples/adc/lpc_adc_interrupt/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/adc/lpc_adc_interrupt/cm4" type="xml">
            <files mask="lpc_adc_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_mailbox_interrupt_cm4" name="mailbox_interrupt_cm4" brief="The mailbox_interrupt example shows how to use mailbox to exchange message.In this example:The core 0(CM4) writes value to mailbox for Core 1(CM0+), it causes mailbox interrupton CM0+ side. CM0+ reads value from mailbox increments and writes it to mailbox registerfor CM4, it causes mailbox interrupt on CM4 side. CM4 reads value from mailbox incrementsand writes it to mailbox register for CM0 again." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/mailbox" linked_projects="lpcxpresso54114_mailbox_interrupt_cm0plus" path="examples/lpcxpresso54114/driver_examples/mailbox/interrupt/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/mailbox/interrupt/cm4" type="xml">
            <files mask="mailbox_interrupt_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_mailbox_mutex_cm4" name="mailbox_mutex_cm4" brief="The mailbox_mutex example shows how to use mailbox mutex.In this example:The core 0 sends address of shared variable to core 1 by mailbox.Both cores trying to get mutex in while loop, after that updates shared variableand sets mutex, to allow access other core to shared variable." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/mailbox" linked_projects="lpcxpresso54114_mailbox_mutex_cm0plus" path="examples/lpcxpresso54114/driver_examples/mailbox/mutex/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/mailbox/mutex/cm4" type="xml">
            <files mask="mailbox_mutex_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_mrt_example" name="mrt_example" brief="The MRT project is a simple demonstration program of the SDK MRT driver. It sets up the MRThardware block to trigger a periodic interrupt after every 250 milliseconds. When the PIT interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/mrt" path="examples/lpcxpresso54114/driver_examples/mrt/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/mrt/cm4" type="xml">
            <files mask="mrt_example_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_pint_pattern_match" name="pint_pattern_match" brief="This example shows how to use SDK drivers to use the Pin interrupt &amp; pattern match peripheral." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pint" path="examples/lpcxpresso54114/driver_examples/pint/pattern_match/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/pint/pattern_match/cm4" type="xml">
            <files mask="pint_pattern_match_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_pint_pin_interrupt" name="pint_pin_interrupt" brief="This example shows how to use SDK drivers to use the Pin interrupt &amp; pattern match peripheral." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/pint" path="examples/lpcxpresso54114/driver_examples/pint/pin_interrupt/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/pint/pin_interrupt/cm4" type="xml">
            <files mask="pint_pin_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_rtc_example" name="rtc_example" brief="The RTC project is a simple demonstration program of the SDK RTC driver. It sets up the RTChardware block to trigger an alarm after a user specified time period. The test will set the currentdate and time to a predefined value. The alarm will be set with reference to this predefined dateand time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/rtc" path="examples/lpcxpresso54114/driver_examples/rtc/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/rtc/cm4" type="xml">
            <files mask="rtc_example_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_sctimer_16bit_counter" name="sctimer_16bit_counter" brief="The SCTimer 16-bit counter project is a demonstration program of the SDK SCTimer driver operation when using the SCTimer counteras two 16-bit counters.The example toggles an output per counter when a match occurs." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sctimer" path="examples/lpcxpresso54114/driver_examples/sctimer/16bit_counter/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/sctimer/16bit_counter/cm4" type="xml">
            <files mask="sctimer_16bit_counter_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_sctimer_multi_state_pwm" name="sctimer_multi_state_pwm" brief="The SCTImer multi-state project is a demonstration program of the SCTimer state machine. It shows how to set up events to be triggered in a certain stateand transitioning between states.State 0 has 2 events that generate a PWM signal, it also has an event linked to an input signal to transition to State 1.State 1 has 4 events that generate 2 PWM signals, it also has an event linked to an input signal to transition to State 0." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sctimer" path="examples/lpcxpresso54114/driver_examples/sctimer/multi_state_pwm/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/sctimer/multi_state_pwm/cm4" type="xml">
            <files mask="sctimer_multi_state_pwm_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_sctimer_pwm_with_dutycyle_change" name="sctimer_pwm_with_dutycyle_change" brief="This SCTIMer project is a demonstration program of the SDK SCTimer driver's PWM generation. It sets up a PWM signaland periodically updates the PWM signals dutycycle." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sctimer" path="examples/lpcxpresso54114/driver_examples/sctimer/pwm_with_dutycyle_change/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/sctimer/pwm_with_dutycyle_change/cm4" type="xml">
            <files mask="sctimer_pwm_with_dutycyle_change_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_sctimer_simple_pwm" name="sctimer_simple_pwm" brief="The SCTimer project is a simple demonstration program of the SDK SCTimer's driver capabiltiy to generate PWM signals." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/sctimer" path="examples/lpcxpresso54114/driver_examples/sctimer/simple_pwm/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/sctimer/simple_pwm/cm4" type="xml">
            <files mask="sctimer_simple_pwm_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_dma_b2b_transfer_master" name="spi_dma_b2b_transfer_master" brief="The spi_dma_b2b_transfer_master example shows how to use driver API to transfer in DMA way.  In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checksif the data received from slave is correct. This example needs to work with spi_dma_b2b_transfer_slave example.Note: This example will run in master mode, please prepare another board for slave, and the slave       board should be started first.Project Information1.How to set the baudrate of SPI?  The baudrate of SPI is easy to set, just make sure the source clock of SPI." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="examples/lpcxpresso54114/driver_examples/spi/dma_b2b_transfer/master/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/spi/dma_b2b_transfer/master/cm4" type="xml">
            <files mask="spi_dma_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_dma_b2b_transfer_slave" name="spi_dma_b2b_transfer_slave" brief="The spi_dma_b2b_transfer_slave example shows how to use driver API to transfer in DMA way.  In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checksif the data received from master is correct. This example needs to work with spi_dma_b2b_transfer_master example." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="examples/lpcxpresso54114/driver_examples/spi/dma_b2b_transfer/slave/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/spi/dma_b2b_transfer/slave/cm4" type="xml">
            <files mask="spi_dma_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_half_duplex_int_master" name="spi_half_duplex_int_master" brief="The spi_half_duplex_int_transfer_master example shows how to use driver API to transfer in half-duplex way.  In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct.Besides, master will transfer data in interrupt way. " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="examples/lpcxpresso54114/driver_examples/spi/half_duplex_transfer/int/master/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/spi/half_duplex_transfer/int/master/cm4" type="xml">
            <files mask="spi_half_duplex_int_master_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_half_duplex_int_slave" name="spi_half_duplex_int_slave" brief="The spi_half_duplex_int_transfer_slave example shows how to receive and transmit data to master board.Notice: The SPI slave of this example uses interrupt mode. The data transfer size(not buffer size) is twice ofthe master's transfer size. The first half of the transmission will receive data, and the second half will senddata back to master, so the address of the receive buffer is &amp;rxDataPolling[64].In this example, one spi instance as slave and another spi instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from master is correct. And slave will print what it received." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="examples/lpcxpresso54114/driver_examples/spi/half_duplex_transfer/int/slave/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/spi/half_duplex_transfer/int/slave/cm4" type="xml">
            <files mask="spi_half_duplex_int_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_half_duplex_polling_master" name="spi_half_duplex_polling_master" brief="The spi_half_duplex_polling_transfer_master example shows how to use driver API to transfer in half-duplex way.  In this example, one spi instance as master and another spi instance on the othere board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct.Besides, master will transfer data in polling way. " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="examples/lpcxpresso54114/driver_examples/spi/half_duplex_transfer/polling/master/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/spi/half_duplex_transfer/polling/master/cm4" type="xml">
            <files mask="spi_half_duplex_polling_master_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_half_duplex_polling_slave" name="spi_half_duplex_polling_slave" brief="The spi_half_duplex_polling_transfer_slave example shows how to receive and transmit data to master board.Notice: The SPI slave of this example uses interrupt mode. The data transfer size(not buffer size) is twice ofthe master's transfer size. The first half of the transmission will receive data, and the second half will senddata back to master, so the address of the receive buffer is &amp;rxDataPolling[64].In this example, one spi instance as slave and another spi instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from master is correct. And slave will print what it received." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="examples/lpcxpresso54114/driver_examples/spi/half_duplex_transfer/polling/slave/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/spi/half_duplex_transfer/polling/slave/cm4" type="xml">
            <files mask="spi_half_duplex_polling_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_interrupt" name="spi_interrupt" brief="The spi_interrupt example shows how to use spi functional API to do interrupt transfer:In this example, one spi instance as master and another spi instance as slave. Master sends a piece of data to slave,and check if the data slave received is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="examples/lpcxpresso54114/driver_examples/spi/interrupt/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/spi/interrupt/cm4" type="xml">
            <files mask="spi_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_interrupt_b2b_master" name="spi_interrupt_b2b_master" brief="The spi_interrupt_b2b_master example shows how to use spi functional API to do interrupt transfer as a master:In this example, the spi instance as master. Master sends a piece of data to slave, receive data from slave,and checkif the data master received is correct. This example needs to work with spi_interrupt_b2b_slave example." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="examples/lpcxpresso54114/driver_examples/spi/interrupt_b2b/master/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/spi/interrupt_b2b/master/cm4" type="xml">
            <files mask="spi_interrupt_b2b_master_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_interrupt_b2b_slave" name="spi_interrupt_b2b_slave" brief="The spi_interrupt_b2b_slave example shows how to use spi functional API to do interrupt transfer as a slave:In this example, the spi instance as slave. Slave receives data froma master and send a peiece of data to master,and check if the data slave received is correct. This example needs to work with spi_interrupt_b2b_master example." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="examples/lpcxpresso54114/driver_examples/spi/interrupt_b2b/slave/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/spi/interrupt_b2b/slave/cm4" type="xml">
            <files mask="spi_interrupt_b2b_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_interrupt_b2b_transfer_master" name="spi_interrupt_b2b_transfer_master" brief="The spi_interrupt_board2board_master example shows how to use spi driver as master to do board to board transfer withinterrupt:In this example, one spi instance as master and another spi instance on othereboard as slave. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="examples/lpcxpresso54114/driver_examples/spi/interrupt_b2b_transfer/master/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/spi/interrupt_b2b_transfer/master/cm4" type="xml">
            <files mask="spi_interrupt_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_interrupt_b2b_transfer_slave" name="spi_interrupt_b2b_transfer_slave" brief="The spi_interrupt_board2board_slave example shows how to use spi driver as slave to do board to board transfer with interrupt:In this example, one spi instance as slave and another spi instance on other board as master. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="examples/lpcxpresso54114/driver_examples/spi/interrupt_b2b_transfer/slave/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/spi/interrupt_b2b_transfer/slave/cm4" type="xml">
            <files mask="spi_interrupt_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_interrupt_flash" name="spi_interrupt_flash" brief="The spi_interrupt example shows how to communicate with mx25r flash using spi interrupt functional API." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="examples/lpcxpresso54114/driver_examples/spi/interrupt_flash/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/spi/interrupt_flash/cm4" type="xml">
            <files mask="spi_interrupt_flash_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_polling_b2b_transfer_master" name="spi_polling_b2b_transfer_master" brief="The spi_polling_board2board_master example shows how to use spi driver as master to do board to board transfer with polling:In this example, one spi instance as master and another spi instance on othereboard as slave. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="examples/lpcxpresso54114/driver_examples/spi/polling_b2b_transfer/master/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/spi/polling_b2b_transfer/master/cm4" type="xml">
            <files mask="spi_polling_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_polling_b2b_transfer_slave" name="spi_polling_b2b_transfer_slave" brief="The spi_polling_board2board_slave example shows how to use spi driver as slave to do board to board transfer withpolling:Notice: The SPI slave of this example uses interrupt mode, as there is no polling mode for SPI slave.In this example, one spi instance as slave and another spi instance on other board as master. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="examples/lpcxpresso54114/driver_examples/spi/polling_b2b_transfer/slave/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/spi/polling_b2b_transfer/slave/cm4" type="xml">
            <files mask="spi_polling_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_spi_polling_flash" name="spi_polling_flash" brief="The spi_interrupt example shows how to communicate with mx25r flash using spi polling functional API." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/spi" path="examples/lpcxpresso54114/driver_examples/spi/polling_flash/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/spi/polling_flash/cm4" type="xml">
            <files mask="spi_polling_flash_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_usart_dma_double_buffer_transfer" name="usart_dma_double_buffer_transfer" brief="This example shows how to use the DMA driver to implement a double buffer receive scheme from the USARTThe example shows the double buffer constructed using two descriptors (g_pingpong_desc). These descriptors are cycled from one to the other.Things to note- The descriptors of the ping pong transfer need to be aligned to size 16- The inital transfer will perform the same job as first descriptor of ping pong, so the first linkeage is to go to g_pingpong_desc[1]- g_pingpong_desc[1] then chains the g_pingpong_desc[0] as the next descriptor- The properties are set up such that g_pingpong_desc[0] (and the initial configuration uses INTA to signal back to the callback)- g_pingpong_desc[1] uses INTB to signal to the callback- The scheduled callback uses this information to know which data was last writtenA note on PerformanceThe intent of this example is to illustrate how a double-buffer scheme can be implemented using the dma. The performance of this example will be limited to how quickly the echo printer can read-out the data from the ping pong buffer and display it. This means that the example will work well if characters are entered at a rate where the DMA callback to echo the string can keep up with the input stream. Connecting the USARTRX to a continuous fast speed will cause the DMA to fall behind. " toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/usart" path="examples/lpcxpresso54114/driver_examples/usart/dma_double_buffer_transfer/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/usart/dma_double_buffer_transfer/cm4" type="xml">
            <files mask="usart_dma_double_buffer_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_usart_dma_rb_transfer" name="usart_dma_rb_transfer" brief="The usart_dma ring buffer example shows how to use usart driver with DMA:In this example, one usart instance connect to PC through usart, the board will send back all characters that PC send to the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/usart" path="examples/lpcxpresso54114/driver_examples/usart/dma_rb_transfer/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/usart/dma_rb_transfer/cm4" type="xml">
            <files mask="usart_dma_rb_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_usart_dma_transfer" name="usart_dma_transfer" brief="The usart_dma example shows how to use usart driver with DMA:In this example, one usart instance connect to PC through usart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/usart" path="examples/lpcxpresso54114/driver_examples/usart/dma_transfer/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/usart/dma_transfer/cm4" type="xml">
            <files mask="usart_dma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_usart_interrupt" name="usart_interrupt" brief="The uart_functioncal_interrupt example shows how to use uart driver functionalAPI to receive data with interrupt method:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/usart" path="examples/lpcxpresso54114/driver_examples/usart/interrupt/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/usart/interrupt/cm4" type="xml">
            <files mask="usart_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_usart_interrupt_rb_transfer" name="usart_interrupt_rb_transfer" brief="The uart_interrupt_ring_buffer example shows how to use uart driver in interrupt way withRX ring buffer enabled:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/usart" path="examples/lpcxpresso54114/driver_examples/usart/interrupt_rb_transfer/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/usart/interrupt_rb_transfer/cm4" type="xml">
            <files mask="usart_interrupt_rb_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_usart_interrupt_transfer" name="usart_interrupt_transfer" brief="The uart_interrupt example shows how to use uart driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/usart" path="examples/lpcxpresso54114/driver_examples/usart/interrupt_transfer/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/usart/interrupt_transfer/cm4" type="xml">
            <files mask="usart_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_usart_polling" name="usart_polling" brief="The uart_polling example shows how to use uart driver in polling way:In this example, one uart instance connect to PC through uart, the board will send back all characters that PCsend to the board." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/usart" path="examples/lpcxpresso54114/driver_examples/usart/polling/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/usart/polling/cm4" type="xml">
            <files mask="usart_polling_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_usart_sync_transfer_master" name="usart_sync_transfer_master" brief="The usart synchronous transfer example shows how to use usart driver in synchronous way." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/usart" path="examples/lpcxpresso54114/driver_examples/usart/sync_transfer/master/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/usart/sync_transfer/master/cm4" type="xml">
            <files mask="usart_sync_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_usart_sync_transfer_slave" name="usart_sync_transfer_slave" brief="The usart synchronous transfer example shows how to use usart driver in synchronous way." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/usart" path="examples/lpcxpresso54114/driver_examples/usart/sync_transfer/slave/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/usart/sync_transfer/slave/cm4" type="xml">
            <files mask="usart_sync_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="lpcxpresso54114_wwdt_example" name="wwdt_example" brief="The WDOG Example project is to demonstrate usage of the KSDK wdog driver.In this example,quick test is first implemented to test the wdog.And then after 5 times of refreshing the watchdog, a timeout reset is generated." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="driver_examples/wwdt" path="examples/lpcxpresso54114/driver_examples/wwdt/cm4">
          <external path="examples/lpcxpresso54114/driver_examples/wwdt/cm4" type="xml">
            <files mask="wwdt_example_v3_8.xml"/>
          </external>
        </example>
      </examples>
    </board>
  </boards>
  <devices>
    <device id="LPC54114J256" name="LPC54114" version="1.0.0" full_name="LPC54114J256" family="LPC5411x" platform="LPC">
      <description>Low Power 32-bit Microcontroller based on ARM Cortex-M4</description>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
        <metadata key="compatible_device.segger" value="LPC54114J256_M4"/>
      </metadataSet>
      <core id="cm0plus_LPC54114J256" name="cm0plus" fpu="false" type="cm0plus" slave_roles="M0SLAVE" boot_role="secondary"/>
      <core id="cm4_LPC54114J256" name="cm4" fpu="true" type="cm4" boot_role="primary">
        <toolchainSettings>
          <toolchainSetting id_refs="com.nxp.mcuxpresso">
            <option id="com.crt.advproject.link.cpp.crpenable" type="boolean" user_name="">
              <value>true</value>
            </option>
            <option id="com.crt.advproject.link.crpenable" type="boolean" user_name="">
              <value>true</value>
            </option>
          </toolchainSetting>
        </toolchainSettings>
      </core>
      <memory>
        <memoryBlock id="PROGRAM_FLASH_LPC54114J256" name="PROGRAM_FLASH" addr="00000000" size="00040000" type="Flash" access="RO"/>
        <memoryBlock id="SRAM1_LPC54114J256" name="SRAM1" addr="20010000" size="00010000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM0_LPC54114J256" name="SRAM0" addr="20000000" size="00010000" type="RAM" access="RW"/>
        <memoryBlock id="SRAMX_LPC54114J256" name="SRAMX" addr="04000000" size="00008000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM2_LPC54114J256" name="SRAM2" addr="20020000" size="00008000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="256" ram_size_kb="192"/>
      <package id="LPC54114J256BD64" name="LPC54114J256BD64"/>
      <package id="LPC54114J256UK49" name="LPC54114J256UK49"/>
      <evaluation_boards>
        <evaluation_board name="lpcxpresso54114"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.attach.slave.release.LPC54114J256" name="internal.attach.slave" value="true"/>
            <params id="internal.multi.swd.release.LPC54114J256" name="internal.multi.swd" value="true"/>
            <params id="internal.wiretype.release.LPC54114J256" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.LPC54114J256" name="internal.has_swo" value="true"/>
          </params>
          <drivers>
            <driver id_refs="PROGRAM_FLASH_LPC54114J256">
              <driverBinary path="core/devices/LPC54114/mcuxpresso" type="binary">
                <files mask="LPC5411x_256K.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
        <linker property="crp_address" value="0x2fc"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
        <linker property="crp_address" value="0x2fc"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="project_template.lpcxpresso54114.LPC54114" name="lpcxpresso54114" brief="Board_project_template lpcxpresso54114" version="1.0.0" full_name="Board_project_template lpcxpresso54114" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="core/boards/lpcxpresso54114/project_template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_usart.LPC54114"/>
          <component_dependency value="component.usart_adapter.LPC54114"/>
          <component_dependency value="platform.drivers.lpc_iocon.LPC54114"/>
          <component_dependency value="platform.drivers.lpc_gpio.LPC54114"/>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="platform.drivers.clock.LPC54114"/>
          <component_dependency value="platform.drivers.power.LPC54114"/>
          <component_dependency value="platform.devices.LPC54114_startup.LPC54114"/>
          <any_of>
            <all>
              <component_dependency value="utility.debug_console.LPC54114"/>
              <component_dependency value="component.serial_manager.LPC54114"/>
            </all>
            <component_dependency value="utility.debug_console_lite.LPC54114"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
      </source>
      <source relative_path="cm4" project_relative_path="./" type="c_include" device_cores="cm4_LPC54114J256">
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="cm4" project_relative_path="./" type="src" device_cores="cm4_LPC54114J256">
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <source relative_path="cm0plus" project_relative_path="./" type="c_include" device_cores="cm0plus_LPC54114J256">
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="cm0plus" project_relative_path="./" type="src" device_cores="cm0plus_LPC54114J256">
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="cm4" project_relative_path="./" type="c_include" device_cores="cm4_LPC54114J256"/>
        <include_path relative_path="cm0plus" project_relative_path="./" type="c_include" device_cores="cm0plus_LPC54114J256"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS.LPC54114" name="CMSIS" brief="Cmsis" version="5.6.0" full_name="Cmsis" devices="LPC54114J256" user_visible="true" type="CMSIS" package_base_path="core/CMSIS" project_base_path="./">
      <dependencies>
        <all>
          <component_dependency value="platform.Include_common.LPC54114"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114"/>
          <component_dependency value="platform.CMSIS_Driver"/>
          <component_dependency value="platform.CMSIS_Driver_Include.CAN_CMSISInclude.LPC54114"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.LPC54114"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.LPC54114"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.LPC54114"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Flash_CMSISInclude.LPC54114"/>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.LPC54114"/>
          <component_dependency value="platform.CMSIS_Driver_Include.MCI_CMSISInclude.LPC54114"/>
          <component_dependency value="platform.CMSIS_Driver_Include.NAND_CMSISInclude.LPC54114"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SAI_CMSISInclude.LPC54114"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.LPC54114"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USART_CMSISInclude.LPC54114"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.LPC54114"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.LPC54114"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.LPC54114"/>
          <component_dependency value="platform.CMSIS_Driver_Include.WiFi_CMSISInclude.LPC54114"/>
          <component_dependency value="platform.Include_dsp.LPC54114"/>
          <component_dependency value="platform.CMSIS_Driver_Include.GPIO_CMSISInclude.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" project_relative_path="CMSIS" type="doc">
        <files mask="LICENSE.txt"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="cmsis_compiler.h"/>
        <files mask="arm_math.h"/>
        <files mask="core_cm35p.h"/>
        <files mask="core_cm4.h"/>
        <files mask="core_cm0plus.h"/>
        <files mask="mpu_armv8.h"/>
        <files mask="arm_common_tables.h"/>
        <files mask="core_dsp.h"/>
        <files mask="core_cm1.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="core_cm7.h"/>
        <files mask="tz_context.h"/>
        <files mask="cmsis_armcc.h"/>
        <files mask="core_sc000.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="core_sc300.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="core_cm0.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_cm33.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="core_armv81mml.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="core_cm3.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_cm23.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver" name="CMSIS_Driver" brief="Cmsis_driver" version="2.7.1" full_name="Cmsis_driver" user_visible="true" type="CMSIS" package_base_path="core/CMSIS/Driver/DriverTemplates" project_base_path="Driver/DriverTemplates">
      <source relative_path="./" type="src">
        <files mask="Driver_SPI.c"/>
        <files mask="Driver_Flash.c"/>
        <files mask="Driver_USART.c"/>
        <files mask="Driver_SAI.c"/>
        <files mask="Driver_Storage.c"/>
        <files mask="Driver_I2C.c"/>
        <files mask="Driver_ETH_PHY.c"/>
        <files mask="Driver_ETH_MAC.c"/>
        <files mask="Driver_CAN.c"/>
        <files mask="Driver_MCI.c"/>
        <files mask="Driver_USBH.c"/>
        <files mask="Driver_USBD.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.CAN_CMSISInclude.LPC54114" name="CAN" brief="Cmsis_driver_include can" version="1.2.0" full_name="Cmsis_driver_include can" devices="LPC54114J256" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_CAN.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114" name="Common" brief="Cmsis_driver_include common" version="2.7.1" full_name="Cmsis_driver_include common" devices="LPC54114J256" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <source relative_path="./" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.LPC54114" name="Ethernet" brief="Cmsis_driver_include ethernet" version="2.1.0" full_name="Cmsis_driver_include ethernet" devices="LPC54114J256" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.LPC54114" name="Ethernet_MAC" brief="Cmsis_driver_include ethernet_mac" version="2.1.0" full_name="Cmsis_driver_include ethernet_mac" devices="LPC54114J256" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_MAC.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.LPC54114" name="Ethernet_PHY" brief="Cmsis_driver_include ethernet_phy" version="2.1.0" full_name="Cmsis_driver_include ethernet_phy" devices="LPC54114J256" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_PHY.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Flash_CMSISInclude.LPC54114" name="Flash" brief="Cmsis_driver_include flash" version="2.2.0" full_name="Cmsis_driver_include flash" devices="LPC54114J256" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_Flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.GPIO_CMSISInclude.LPC54114" name="GPIO" brief="Cmsis_driver_include gpio" version="2.0.0" full_name="Cmsis_driver_include gpio" devices="LPC54114J256" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.I2C_CMSISInclude.LPC54114" name="I2C" brief="Cmsis_driver_include i2c" version="2.3.0" full_name="Cmsis_driver_include i2c" devices="LPC54114J256" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_I2C.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.MCI_CMSISInclude.LPC54114" name="MCI" brief="Cmsis_driver_include mci" version="2.3.0" full_name="Cmsis_driver_include mci" devices="LPC54114J256" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_MCI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.NAND_CMSISInclude.LPC54114" name="NAND" brief="Cmsis_driver_include nand" version="2.3.0" full_name="Cmsis_driver_include nand" devices="LPC54114J256" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_NAND.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.SAI_CMSISInclude.LPC54114" name="SAI" brief="Cmsis_driver_include sai" version="1.1.0" full_name="Cmsis_driver_include sai" devices="LPC54114J256" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SAI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.SPI_CMSISInclude.LPC54114" name="SPI" brief="Cmsis_driver_include spi" version="2.2.0" full_name="Cmsis_driver_include spi" devices="LPC54114J256" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SPI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USART_CMSISInclude.LPC54114" name="USART" brief="Cmsis_driver_include usart" version="2.3.0" full_name="Cmsis_driver_include usart" devices="LPC54114J256" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USART.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_CMSISInclude.LPC54114" name="USB" brief="Cmsis_driver_include usb" version="2.2.0" full_name="Cmsis_driver_include usb" devices="LPC54114J256" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USB.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.LPC54114" name="USB_Device" brief="Cmsis_driver_include usb_device" version="2.2.0" full_name="Cmsis_driver_include usb_device" devices="LPC54114J256" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBD.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.LPC54114" name="USB_Host" brief="Cmsis_driver_include usb_host" version="2.2.0" full_name="Cmsis_driver_include usb_host" devices="LPC54114J256" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBH.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.WiFi_CMSISInclude.LPC54114" name="WiFi" brief="Cmsis_driver_include wifi" version="1.0.0" full_name="Cmsis_driver_include wifi" devices="LPC54114J256" user_visible="false" type="CMSIS_driver" package_base_path="core/CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_WiFi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.Include_common.LPC54114" name="CMSIS_Include_common" brief="Cmsis_include_common" version="5.3.0" full_name="Cmsis_include_common" devices="LPC54114J256" user_visible="true" type="CMSIS_Include" package_base_path="core/CMSIS/Include" project_base_path="CMSIS">
      <source relative_path="./" type="c_include">
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="cmsis_iccarm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="CMSIS_Include_common_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="CMSIS_Include_common_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.Include_core_cm0plus.LPC54114" name="CMSIS_Include_core_cm0plus" brief="Cmsis_include_core_cm0plus" version="5.3.0" full_name="Cmsis_include_core_cm0plus" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="CMSIS_Include" package_base_path="core/CMSIS/Include" project_base_path="CMSIS">
      <dependencies>
        <all>
          <component_dependency value="platform.Include_common.LPC54114"/>
          <component_dependency value="platform.Include_dsp.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="core_cm0plus.h"/>
        <files mask="mpu_armv7.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="CMSIS_Include_core_cm0plus_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.Include_core_cm4.LPC54114" name="CMSIS_Include_core_cm4" brief="Cmsis_include_core_cm4" version="5.3.0" full_name="Cmsis_include_core_cm4" devices="LPC54114J256" device_cores="cm4_LPC54114J256" user_visible="true" type="CMSIS_Include" package_base_path="core/CMSIS/Include" project_base_path="CMSIS">
      <dependencies>
        <all>
          <component_dependency value="platform.Include_common.LPC54114"/>
          <component_dependency value="platform.Include_dsp.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="core_cm4.h"/>
        <files mask="mpu_armv7.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="CMSIS_Include_core_cm4_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.Include_dsp.LPC54114" name="CMSIS_Include_dsp" brief="Cmsis_include_dsp" version="1.7.0" full_name="Cmsis_include_dsp" devices="LPC54114J256" user_visible="true" type="CMSIS_Include" package_base_path="core/CMSIS/Include" project_base_path="CMSIS">
      <source relative_path="./" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="CMSIS_Include_dsp_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="CMSIS_Include_dsp_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="COPY_BSD_License.LPC54114" name="COPY_BSD_License" brief="COPY of BSD-3-Clause license" version="1.0.0" full_name="COPY of BSD-3-Clause license" devices="LPC54114J256" user_visible="true" type="other" package_base_path="core/./" project_base_path="src">
      <source relative_path="./" type="other">
        <files mask="COPYING-BSD-3"/>
      </source>
    </component>
    <component id="project_template.LPC54114.LPC54114" name="LPC54114" brief="Devices_project_template LPC54114" version="1.0.0" full_name="Devices_project_template LPC54114" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="core/devices/LPC54114/project_template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_usart.LPC54114"/>
          <component_dependency value="component.usart_adapter.LPC54114"/>
          <component_dependency value="platform.drivers.flexcomm.LPC54114"/>
          <component_dependency value="platform.drivers.lpc_iocon.LPC54114"/>
          <component_dependency value="platform.drivers.lpc_gpio.LPC54114"/>
          <component_dependency value="platform.drivers.power.LPC54114"/>
          <component_dependency value="platform.devices.LPC54114_startup.LPC54114"/>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="platform.drivers.clock.LPC54114"/>
          <any_of>
            <all>
              <component_dependency value="utility.debug_console.LPC54114"/>
              <component_dependency value="component.serial_manager.LPC54114"/>
            </all>
            <component_dependency value="utility.debug_console_lite.LPC54114"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="RTE_Device.LPC54114" name="RTE_Device" brief="Rte_device" version="1.0.0" full_name="Rte_device" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" category="Device/SDK Project Template" user_visible="true" type="project_template" package_base_path="core/devices/LPC54114/template" project_base_path="board">
      <dependencies>
        <component_dependency value="platform.drivers.lpc_dma.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="tools.LPC54114" name="cmake_toolchain" brief="Cmake_toolchain" version="1.0.0" full_name="Cmake_toolchain" devices="LPC54114J256" user_visible="true" type="other" package_base_path="core/tools/cmake_toolchain_files" project_base_path="cmake_toolchain_files">
      <source relative_path="./" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="xcc.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
      </source>
    </component>
    <component id="component.button.LPC54114" name="button" brief="Component button" version="1.0.0" full_name="Component button" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="core/components/button" project_base_path="component/button">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="component.timer_manager.LPC54114"/>
          <component_dependency value="component.lpc_gpio_adapter.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_button.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_button.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_cs42888_adapter.LPC54114" name="codecs_cs42888_adapter" brief="Component cs42888 adapter for multi codecs" version="2.2.1" full_name="Component codec_cs42888_adapter" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="core/components/codec/port" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.cs42888.LPC54114"/>
          <component_dependency value="driver.codec.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cs42888_adapter.c"/>
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cs42888_adapter.h"/>
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_da7212_adapter.LPC54114" name="codecs_da7212_adapter" brief="Component da7212 adapter for multi codecs" version="2.2.0" full_name="Component codec_da7212_adapter" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="core/components/codec/port" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.dialog7212.LPC54114"/>
          <component_dependency value="driver.codec.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_da7212_adapter.c"/>
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_da7212_adapter.h"/>
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_i2c.LPC54114" name="codec_i2c" brief="Component codec_i2c" version="2.1.0" full_name="Component codec_i2c" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="core/components/codec/i2c" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="component.flexcomm_i2c_adapter.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="component_codec_i2c_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_sgtl_adapter.LPC54114" name="codecs_sgtl_adapter" brief="Component sgtl5000 adapter for multi codecs" version="2.2.0" full_name="Component codec_sgtl_adapter" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="core/components/codec/port" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.sgtl5000.LPC54114"/>
          <component_dependency value="driver.codec.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_sgtl_adapter.c"/>
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sgtl_adapter.h"/>
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_wm8904_adapter.LPC54114" name="codecs_wm8904_adapter" brief="Component wm8904 adapter for multi codecs" version="2.2.0" full_name="Component codec_wm8904_adapter" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="core/components/codec/port" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.wm8904.LPC54114"/>
          <component_dependency value="driver.codec.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8904_adapter.c"/>
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8904_adapter.h"/>
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_wm8960_adapter.LPC54114" name="codecs_wm8960_adapter" brief="Component wm8960 adapter for multi codecs" version="2.2.0" full_name="Component codec_wm8960_adapter" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="core/components/codec/port" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.wm8960.LPC54114"/>
          <component_dependency value="driver.codec.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8960_adapter.c"/>
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8960_adapter.h"/>
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.common_task.LPC54114" name="common_task" brief="Component common_task" version="1.0.0" full_name="Component common_task" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="core/components/common_task" project_base_path="component/common_task">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="component.osa.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_common_task.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_common_task.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.cs42888_adapter.LPC54114" name="codec_cs42888_adapter" brief="Component cs42888 adapter for single codec" version="2.2.1" full_name="Component cs42888_adapter" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="core/components/codec/port/cs42888" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.cs42888.LPC54114"/>
          <component_dependency value="driver.codec.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.ctimer_adapter.LPC54114" name="ctimer_adapter" brief="Component ctimer_adapter" version="1.0.0" full_name="Component ctimer_adapter" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="core/components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="platform.drivers.ctimer.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_ctimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="component_ctimer_adapter_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.da7212_adapter.LPC54114" name="codec_da7212_adapter" brief="Component da7212 adapter for single codec" version="2.2.0" full_name="Component da7212_adapter" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="core/components/codec/port/da7212" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.dialog7212.LPC54114"/>
          <component_dependency value="driver.codec.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.flexcomm_i2c_adapter.LPC54114" name="flexcomm_i2c_adapter" brief="Component flexcomm_i2c_adapter" version="1.0.0" full_name="Component flexcomm_i2c_adapter" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="core/components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="platform.drivers.flexcomm_i2c.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_flexcomm_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="component_flexcomm_i2c_adapter_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.gint_adapter.LPC54114" name="gint_adapter" brief="Component gint_adapter" version="1.0.0" full_name="Component gint_adapter" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="core/components/gpio" project_base_path="component/gpio">
      <dependencies>
        <component_dependency value="platform.drivers.gint.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_gint.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.led.LPC54114" name="led" brief="Component led" version="1.0.0" full_name="Component led" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="core/components/led" project_base_path="component/led">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="component.timer_manager.LPC54114"/>
          <component_dependency value="component.lpc_gpio_adapter.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_led.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_led.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lists.LPC54114" name="lists" brief="Component lists" version="1.0.0" full_name="Component lists" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="core/components/lists" project_base_path="component/lists">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_generic_list.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_generic_list.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="component_lists_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="component_lists_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.LPC54114" name="log" brief="Component log" version="1.0.0" full_name="Component log" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="core/components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="utility.debug_console.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log.h"/>
        <files mask="fsl_component_log_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debugconsole.LPC54114" name="log_backend_debug_console" brief="Component log backend debug console" version="1.0.0" full_name="Component log backend debug console" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="core/components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="component.log.LPC54114"/>
          <component_dependency value="utility.debug_console.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.ringbuffer.LPC54114" name="log_backend_ring_buffer" brief="Component log backend ring buffer" version="1.0.0" full_name="Component log backend ring buffer" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="core/components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="component.log.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_ringbuffer.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_ringbuffer.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpc_crc_adapter.LPC54114" name="lpc_crc_adapter" brief="Component lpc_crc_adapter" version="1.0.0" full_name="Component lpc_crc_adapter" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="core/components/crc" project_base_path="component/crc">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="platform.drivers.lpc_crc.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpc_crc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpc_gpio_adapter.LPC54114" name="lpc_gpio_adapter" brief="Component lpc_gpio_adapter" version="1.0.0" full_name="Component lpc_gpio_adapter" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="core/components/gpio" project_base_path="component/gpio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpc_gpio.LPC54114"/>
          <component_dependency value="platform.drivers.inputmux.LPC54114"/>
          <component_dependency value="platform.drivers.pint.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpc_gpio.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager.LPC54114" name="mem_manager" brief="Component mem_manager" version="1.0.0" full_name="Component mem_manager" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="core/components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="component.lists.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_light.LPC54114" name="mem_manager_light" brief="Component mem_manager_light" version="1.0.0" full_name="Component mem_manager_light" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="core/components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="component.lists.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_light.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mrt_adapter.LPC54114" name="mrt_adapter" brief="Component mrt_adapter" version="1.0.0" full_name="Component mrt_adapter" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="core/components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="platform.drivers.mrt.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_mrt.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa.LPC54114" name="osa" brief="Component osa" version="1.0.0" full_name="Component osa" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="core/components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="component.lists.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source condition="middleware.baremetal.LPC54114" relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
      </source>
      <source condition="middleware.baremetal.LPC54114" relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_bm.LPC54114" name="osa_bm" brief="Component osa_bm" version="1.0.0" full_name="Component osa_bm" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="false" type="software_component" package_base_path="core/components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="component.lists.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_bm.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.panic.LPC54114" name="panic" brief="Component panic" version="1.0.0" full_name="Component panic" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="core/components/panic" project_base_path="component/panic">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="utility.debug_console.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_panic.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_panic.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.pwm_ctimer_adapter.LPC54114" name="pwm_ctimer_adapter" brief="Component pwm_ctimer_adapter" version="1.0.0" full_name="Component pwm_ctimer_adapter" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="core/components/pwm" project_base_path="component/pwm">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="platform.drivers.ctimer.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_pwm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_pwm_ctimer.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager.LPC54114" name="serial_manager" brief="Component serial_manager" version="1.0.0" full_name="Serial Manager" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="core/components/serial_manager" project_base_path="component/serial_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="component.lists.LPC54114"/>
          <any_of>
            <component_dependency value="component.serial_manager_uart.LPC54114"/>
            <component_dependency value="component.serial_manager_swo.LPC54114"/>
            <component_dependency value="component.serial_manager_virtual.LPC54114"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_manager.h"/>
        <files mask="fsl_component_serial_port_internal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="component_serial_manager_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_swo.LPC54114" name="serial_manager_swo" brief="Component serial_manager_swo" version="1.0.0" full_name="Serial Manager Swo" devices="LPC54114J256" device_cores="cm4_LPC54114J256" user_visible="true" type="utilities" package_base_path="core/components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SWO" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="component.serial_manager.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_swo.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_swo.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_uart.LPC54114" name="serial_manager_uart" brief="Component serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="core/components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.usart_adapter.LPC54114"/>
          <component_dependency value="component.serial_manager.LPC54114"/>
          <component_dependency value="platform.drivers.flexcomm_usart.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_uart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="component_serial_manager_uart_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_virtual.LPC54114" name="serial_manager_virtual" brief="Component serial_manager_virtual" version="1.0.0" full_name="Serial Manager Virtual" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="core/components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.LPC54114"/>
          <component_dependency value="platform.drivers.common.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_virtual.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_virtual.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.sgtl_adapter.LPC54114" name="codec_sgtl_adapter" brief="Component sgtl5000 adapter for single codec" version="2.2.0" full_name="Component sgtl_adapter" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="core/components/codec/port/sgtl5000" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.sgtl5000.LPC54114"/>
          <component_dependency value="driver.codec.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.software_crc_adapter.LPC54114" name="software_crc_adapter" brief="Component software_crc_adapter" version="1.0.0" full_name="Component software_crc_adapter" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="core/components/crc" project_base_path="component/crc">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_crc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.software_rng_adapter.LPC54114" name="software_rng_adapter" brief="Component software_rng_adapter" version="1.0.0" full_name="Component software_rng_adapter" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="core/components/rng" project_base_path="component/rng">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_rng.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.timer_manager.LPC54114" name="timer_manager" brief="Component timer_manager" version="1.0.0" full_name="Component timer_manager" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="core/components/timer_manager" project_base_path="component/timer_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="component.lists.LPC54114"/>
          <any_of>
            <component_dependency value="component.ctimer_adapter.LPC54114"/>
            <component_dependency value="component.mrt_adapter.LPC54114"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_timer_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_timer_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.usart_adapter.LPC54114" name="usart_adapter" brief="Component usart_adapter" version="1.0.0" full_name="usart_adapter" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="core/components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="platform.drivers.flexcomm_usart.LPC54114"/>
          <component_dependency value="platform.drivers.flexcomm.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_usart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="component_usart_adapter_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="component_usart_adapter_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.wm8904_adapter.LPC54114" name="codec_wm8904_adapter" brief="Component wm8904 adapter for single codec" version="2.2.0" full_name="Component wm8904_adapter" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="core/components/codec/port/wm8904" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.wm8904.LPC54114"/>
          <component_dependency value="driver.codec.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="component_wm8904_adapter_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.wm8960_adapter.LPC54114" name="codec_wm8960_adapter" brief="Component wm8960 adapter for single codecs" version="2.2.0" full_name="Component wm8960_adapter" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="core/components/codec/port/wm8960" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.wm8960.LPC54114"/>
          <component_dependency value="driver.codec.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.LPC54114_CMSIS.LPC54114" name="LPC54114_CMSIS" brief="Device LPC54114_cmsis" version="1.0.0" full_name="Device LPC54114_cmsis" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="CMSIS_Include" package_base_path="core/devices/LPC54114" project_base_path="device">
      <dependencies>
        <any_of>
          <component_dependency value="platform.Include_core_cm4.LPC54114"/>
          <component_dependency value="platform.Include_core_cm0plus.LPC54114"/>
        </any_of>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_device_registers.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm0plus_LPC54114J256">
        <files mask="LPC54114_cm0plus.h"/>
        <files mask="LPC54114_cm0plus_features.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm4_LPC54114J256">
        <files mask="LPC54114_cm4.h"/>
        <files mask="LPC54114_cm4_features.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="device_LPC54114_CMSIS_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="device_LPC54114_CMSIS_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include" device_cores="cm0plus_LPC54114J256"/>
        <include_path relative_path="./" type="c_include" device_cores="cm4_LPC54114J256"/>
      </include_paths>
    </component>
    <component id="platform.devices.LPC54114_debugger.LPC54114" name="LPC54114_debugger" brief="Device LPC54114_debugger" version="1.0.0" full_name="Device LPC54114_debugger" devices="LPC54114J256" user_visible="true" type="debugger" package_base_path="core/devices/LPC54114" project_base_path="LPC54114">
      <source relative_path="./" type="xml" device_cores="cm0plus_LPC54114J256">
        <files mask="LPC54114_cm0plus.xml"/>
      </source>
      <source relative_path="./" type="xml" device_cores="cm4_LPC54114J256">
        <files mask="LPC54114_cm4.xml"/>
      </source>
    </component>
    <component id="platform.devices.LPC54114_linker.LPC54114" name="LPC54114_linker" brief="Device LPC54114_linker" version="1.0.0" full_name="Device LPC54114_linker" devices="LPC54114J256" user_visible="true" type="linker" package_base_path="core/devices/LPC54114" project_base_path="LPC54114">
      <source toolchain="armgcc" relative_path="gcc" type="linker" device_cores="cm4_LPC54114J256">
        <files mask="LPC54114J256_cm4_flash.ld"/>
        <files mask="LPC54114J256_cm4_ram.ld"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" type="linker" device_cores="cm0plus_LPC54114J256">
        <files mask="LPC54114J256_cm0plus_flash.ld"/>
        <files mask="LPC54114J256_cm0plus_ram.ld"/>
      </source>
    </component>
    <component id="platform.devices.LPC54114_startup.LPC54114" name="LPC54114_startup" brief="Device LPC54114_startup" version="1.1.0" full_name="Device LPC54114_startup" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" category="Device/Startup" user_visible="true" type="startup" package_base_path="core/devices/LPC54114" project_base_path="startup">
      <dependencies>
        <component_dependency value="platform.devices.LPC54114_system.LPC54114"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="gcc" project_relative_path="./" type="asm_include" device_cores="cm0plus_LPC54114J256">
        <files mask="startup_LPC54114_cm0plus.S"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" project_relative_path="./" type="asm_include" device_cores="cm4_LPC54114J256">
        <files mask="startup_LPC54114_cm4.S"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src_c">
        <files mask="startup_lpc5411x.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src_cpp">
        <files mask="startup_lpc5411x.cpp"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src">
        <files mask="boot_multicore_slave.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="c_include">
        <files mask="boot_multicore_slave.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="device_LPC54114_startup_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="device_LPC54114_startup_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mcuxpresso" project_relative_path="./" toolchain="mcuxpresso" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.LPC54114_system.LPC54114" name="LPC54114_system" brief="Device LPC54114_system" version="1.0.0" full_name="Device LPC54114_system" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="CMSIS_Include" package_base_path="core/devices/LPC54114" project_base_path="device">
      <dependencies>
        <component_dependency value="platform.devices.LPC54114_CMSIS.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="src" device_cores="cm0plus_LPC54114J256">
        <files mask="system_LPC54114_cm0plus.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm0plus_LPC54114J256">
        <files mask="system_LPC54114_cm0plus.h"/>
      </source>
      <source relative_path="./" type="src" device_cores="cm4_LPC54114J256">
        <files mask="system_LPC54114_cm4.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm4_LPC54114J256">
        <files mask="system_LPC54114_cm4.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="device_LPC54114_system_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="device_LPC54114_system_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include" device_cores="cm0plus_LPC54114J256"/>
        <include_path relative_path="./" type="c_include" device_cores="cm4_LPC54114J256"/>
      </include_paths>
    </component>
    <component id="docs.LPC54114.LPC54114" name="LPC54114" brief="Docs lpc54114" version="1.0.0" full_name="Docs lpc54114" devices="LPC54114J256" user_visible="true" type="documentation" package_base_path="core/docs" project_base_path="docs">
      <source relative_path="./" type="doc">
        <files mask="Getting Started with MCUXpresso SDK.pdf"/>
        <files mask="MCUXpresso SDK Release Notes for LPCXpresso54114.pdf"/>
      </source>
    </component>
    <component id="platform.drivers.clock.LPC54114" name="clock" brief="Clock Driver" version="2.2.0" full_name="Clock Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/devices/LPC54114/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.power.LPC54114"/>
          <component_dependency value="platform.drivers.common.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="driver_clock_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_clock_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.codec.LPC54114" name="codec" brief="Driver codec" version="2.2.1" full_name="Driver codec" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="core/components/codec" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <any_of>
            <component_dependency value="component.wm8904_adapter.LPC54114"/>
            <component_dependency value="component.codec_cs42888_adapter.LPC54114"/>
            <component_dependency value="component.codec_da7212_adapter.LPC54114"/>
            <component_dependency value="component.codec_sgtl_adapter.LPC54114"/>
            <component_dependency value="component.codec_wm8960_adapter.LPC54114"/>
            <component_dependency value="component.codec_wm8904_adapter.LPC54114"/>
            <component_dependency value="component.cs42888_adapter.LPC54114"/>
            <component_dependency value="component.da7212_adapter.LPC54114"/>
            <component_dependency value="component.sgtl_adapter.LPC54114"/>
            <component_dependency value="component.wm8960_adapter.LPC54114"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_codec_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.common.LPC54114" name="common" brief="COMMON Driver" version="2.2.9" full_name="COMMON Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/common" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.clock.LPC54114"/>
          <component_dependency value="platform.devices.LPC54114_CMSIS.LPC54114"/>
          <component_dependency value="platform.drivers.reset.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="driver_common_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_common_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.cs42888.LPC54114" name="cs42888" brief="Driver cs42888" version="2.1.2" full_name="Driver cs42888" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="core/components/codec/cs42888" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="component.codec_i2c.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cs42888.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cs42888.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ctimer.LPC54114" name="ctimer" brief="CTimer Driver" version="2.2.1" full_name="CTimer Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/ctimer" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ctimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ctimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_ctimer_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.dialog7212.LPC54114" name="dialog7212" brief="Driver dialog7212" version="2.2.2" full_name="Driver dialog7212" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="core/components/codec/da7212" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="component.codec_i2c.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dialog7212.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dialog7212.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dmic.LPC54114" name="dmic" brief="DMIC Driver" version="2.3.0" full_name="DMIC Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/dmic" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dmic.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dmic.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_dmic_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dmic_dma.LPC54114" name="dmic_dma" brief="DMIC DMA Driver" version="2.3.0" full_name="DMIC DMA Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/dmic" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dmic.LPC54114"/>
          <component_dependency value="platform.drivers.lpc_dma.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dmic_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dmic_dma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_dmic_dma_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dmic_hwvad.LPC54114" name="dmic_hwvad" brief="DMIC HWVAD Driver" version="2.3.0" full_name="DMIC HWVAD Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/dmic" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dmic.LPC54114"/>
          <component_dependency value="platform.drivers.common.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dmic.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dmic.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_dmic_hwvad_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flashiap.LPC54114" name="flashiap" brief="FLASHIAP Driver" version="2.0.5" full_name="FLASHIAP Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/flashiap" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flashiap.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flashiap.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_flashiap_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm.LPC54114" name="flexcomm" brief="FLEXCOMM Driver" version="2.0.2" full_name="FLEXCOMM Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/flexcomm" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexcomm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexcomm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="driver_flexcomm_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_flexcomm_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2c.LPC54114" name="i2c" brief="I2C Driver" version="2.1.0" full_name="FLEXCOMM I2C Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/flexcomm" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.LPC54114"/>
          <component_dependency value="platform.drivers.common.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_flexcomm_i2c_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2c_dma.LPC54114" name="i2c_dma" brief="I2C Driver" version="2.1.0" full_name="FLEXCOMM I2C DMA Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/flexcomm" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.LPC54114"/>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="platform.drivers.flexcomm_i2c.LPC54114"/>
          <component_dependency value="platform.drivers.lpc_dma.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c_dma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_flexcomm_i2c_dma_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2s.LPC54114" name="flexcomm_i2s" brief="I2S Driver" version="2.2.2" full_name="FLEXCOMM I2S Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/flexcomm" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.LPC54114"/>
          <component_dependency value="platform.drivers.common.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2s.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2s.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_flexcomm_i2s_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2s_dma.LPC54114" name="flexcomm_i2s_dma" brief="I2S Driver" version="2.2.2" full_name="FLEXCOMM I2S DMA Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/flexcomm" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2s.LPC54114"/>
          <component_dependency value="platform.drivers.lpc_dma.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2s_dma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2s_dma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_flexcomm_i2s_dma_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_spi.LPC54114" name="spi" brief="SPI Driver" version="2.2.1" full_name="FLEXCOMM SPI Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/flexcomm" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.LPC54114"/>
          <component_dependency value="platform.drivers.common.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_spi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_flexcomm_spi_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_spi_dma.LPC54114" name="spi_dma" brief="SPI Driver" version="2.1.1" full_name="FLEXCOMM SPI DMA Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/flexcomm" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.LPC54114"/>
          <component_dependency value="platform.drivers.flexcomm_spi.LPC54114"/>
          <component_dependency value="platform.drivers.lpc_dma.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_spi_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spi_dma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_flexcomm_spi_dma_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_usart.LPC54114" name="usart" brief="USART Driver" version="2.4.0" full_name="FLEXCOMM USART Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/flexcomm" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexcomm.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_usart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="driver_flexcomm_usart_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_flexcomm_usart_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_usart_dma.LPC54114" name="usart_dma" brief="USART Driver" version="2.3.1" full_name="FLEXCOMM USART DMA Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/flexcomm" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.LPC54114"/>
          <component_dependency value="platform.drivers.flexcomm_usart.LPC54114"/>
          <component_dependency value="platform.drivers.lpc_dma.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usart_dma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_usart_dma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_flexcomm_usart_dma_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.fmeas.LPC54114" name="fmeas" brief="FMEAS Driver" version="2.1.1" full_name="FMEAS Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/fmeas" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fmeas.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fmeas.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_fmeas_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.fro_calib.LPC54114" name="fro_calib" brief="FRO calibration driver with calibration Lib" version="2.0.1" full_name="Driver fro_calib" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/devices/LPC54114" project_base_path="LPC54114">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="drivers" type="c_include">
        <files mask="fsl_fro_calib.h"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" type="lib" device_cores="cm0plus_LPC54114J256">
        <files mask="libfro_calib_cm0.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" type="lib" device_cores="cm4_LPC54114J256">
        <files mask="libfro_calib_cm4_hardabi.a"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" type="lib" device_cores="cm0plus_LPC54114J256">
        <files mask="libfro_calib_cm0.a"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" type="lib" device_cores="cm4_LPC54114J256">
        <files mask="libfro_calib_cm4_hardabi.a"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" type="other" device_cores="cm4_LPC54114J256">
        <files mask="libfro_calib_cm4_softabi.a" hidden="true"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" type="other" device_cores="cm4_LPC54114J256">
        <files mask="libfro_calib_cm4_softabi.a"/>
      </source>
      <include_paths>
        <include_path relative_path="drivers" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.gint.LPC54114" name="gint" brief="GINT Driver" version="2.0.3" full_name="GINT Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/gint" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gint.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gint.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_gint_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.iap.LPC54114" name="iap" brief="IAP Driver" version="2.0.4" full_name="IAP Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/iap" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iap.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_iap.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_iap_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.inputmux.LPC54114" name="inputmux" brief="INPUTMUX Driver" version="2.0.3" full_name="INPUTMUX Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/inputmux" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="platform.drivers.inputmux_connections.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_inputmux.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_inputmux.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="driver_inputmux_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_inputmux_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.inputmux_connections.LPC54114" name="inputmux_connections" brief="Inputmux_connections Driver" version="2.0.1" full_name="Inputmux_connections Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/devices/LPC54114/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_inputmux_connections.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="driver_inputmux_connections_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_inputmux_connections_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_adc.LPC54114" name="adc" brief="ADC Driver" version="2.5.0" full_name="ADC Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/lpc_adc" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_lpc_adc_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_crc.LPC54114" name="lpc_crc" brief="CRC Driver" version="2.1.1" full_name="CRC Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/lpc_crc" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_crc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_lpc_crc_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_dma.LPC54114" name="dma" brief="DMA Driver" version="2.4.2" full_name="DMA Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/lpc_dma" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_lpc_dma_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_gpio.LPC54114" name="gpio" brief="GPIO Driver" version="2.1.7" full_name="GPIO Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/lpc_gpio" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="driver_lpc_gpio_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_lpc_gpio_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_iocon.LPC54114" name="iocon" brief="IOCON Driver" version="2.1.2" full_name="IOCON Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/lpc_iocon" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iocon.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="driver_lpc_iocon_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_lpc_iocon_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_rtc.LPC54114" name="lpc_rtc" brief="RTC Driver" version="2.1.2" full_name="RTC Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/lpc_rtc" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rtc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rtc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_lpc_rtc_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mailbox.LPC54114" name="mailbox" brief="MAILBOX Driver" version="2.0.0" full_name="MAILBOX Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/mailbox" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mailbox.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="driver_mailbox_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_mailbox_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mrt.LPC54114" name="mrt" brief="MRT Driver" version="2.0.3" full_name="MRT Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/mrt" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mrt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mrt.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_mrt_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.mx25r_flash.LPC54114" name="mx25r_flash" brief="Driver mx25r_flash" version="1.0.0" full_name="Driver mx25r_flash" devices="LPC54114J256" user_visible="true" type="board_component" package_base_path="core/components/mx25r_flash" project_base_path="source">
      <source relative_path="./" type="c_include">
        <files mask="mx25r_flash.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="mx25r_flash.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_mx25r_flash_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pint.LPC54114" name="pint" brief="PINT Driver" version="2.1.8" full_name="PINT Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/pint" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pint.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pint.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_pint_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.power.LPC54114" name="power" brief="Power driver with Power Lib Hard ABI" version="2.0.0" full_name="power" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/devices/LPC54114" project_base_path="LPC54114">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="drivers" type="c_include">
        <files mask="fsl_power.h"/>
      </source>
      <source relative_path="drivers" type="src">
        <files mask="fsl_power.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" type="lib" device_cores="cm0plus_LPC54114J256">
        <files mask="libpower_cm0.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" type="lib" device_cores="cm4_LPC54114J256">
        <files mask="libpower_cm4_hardabi.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" type="other" device_cores="cm4_LPC54114J256">
        <files mask="libpower_cm4_softabi.a"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" type="lib" device_cores="cm0plus_LPC54114J256">
        <files mask="libpower_cm0.a"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" type="lib" device_cores="cm4_LPC54114J256">
        <files mask="libpower_cm4_hardabi.a"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" type="other" device_cores="cm4_LPC54114J256">
        <files mask="libpower_cm4_softabi.a" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="driver_power_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_power_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="drivers" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.reset.LPC54114" name="reset" brief="Reset Driver" version="2.0.1" full_name="Reset Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/devices/LPC54114/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_reset.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_reset.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="driver_reset_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_reset_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sctimer.LPC54114" name="sctimer" brief="SCT Driver" version="2.3.0" full_name="SCT Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/sctimer" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sctimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sctimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_sctimer_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.sgtl5000.LPC54114" name="sgtl5000" brief="Driver sgtl5000" version="2.1.1" full_name="Driver sgtl5000" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="core/components/codec/sgtl5000" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="component.codec_i2c.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sgtl5000.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sgtl5000.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.utick.LPC54114" name="utick" brief="UTICK Driver" version="2.0.4" full_name="UTICK Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/utick" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_utick.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_utick.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8904.LPC54114" name="wm8904" brief="Driver wm8904" version="2.4.3" full_name="Driver wm8904" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="core/components/codec/wm8904" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="component.codec_i2c.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8904.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8904.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_wm8904_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8960.LPC54114" name="wm8960" brief="Driver wm8960" version="2.1.3" full_name="Driver wm8960" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="core/components/codec/wm8960" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.LPC54114"/>
          <component_dependency value="component.codec_i2c.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8960.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8960.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.wwdt.LPC54114" name="wwdt" brief="WWDT Driver" version="2.1.9" full_name="WWDT Driver" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="core/drivers/wwdt" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wwdt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wwdt.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="driver_wwdt_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.baremetal.LPC54114" name="baremetal" brief="Middleware baremetal" version="1.0.0" full_name="Baremetal" devices="LPC54114J256" user_visible="true" type="OS" package_base_path="core/middleware" project_base_path="middleware">
      <defines>
        <define name="FSL_RTOS_BM" value=""/>
        <define name="SDK_OS_BAREMETAL" value=""/>
      </defines>
    </component>
    <component id="middleware.usb.common_header.LPC54114" name="USB Common Header" brief="Middleware usb common_header" version="2.7.0" full_name="USB Common Header" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" category="USB/USB Common Header" user_visible="true" type="middleware" package_base_path="core/middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="component.osa.LPC54114"/>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.common_header.LPC54114" name="USB Device Common Header" brief="Middleware usb device common_header" version="2.7.0" full_name="USB Device Common Header" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="core/middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.LPC54114"/>
          <component_dependency value="middleware.usb.common_header.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="device" project_relative_path="device/include" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source relative_path="device" project_relative_path="device/source" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <include_paths>
        <include_path relative_path="device" project_relative_path="device/include" type="c_include"/>
        <include_path relative_path="device" project_relative_path="device/source" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.misc_utilities.LPC54114" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.0.0" full_name="Utilities miscellaneous" devices="LPC54114J256" user_visible="true" type="utilities" package_base_path="core/utilities/misc_utilities" project_base_path="utilities">
      <source toolchain="armgcc" relative_path="./" type="src">
        <files mask="fsl_sbrk.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="utilities_misc_utilities_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="utilities_misc_utilities_LPC54114_cm4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.utilities.assert.LPC54114" name="assert" brief="Utility assert" version="1.0.0" full_name="Utility assert" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="core/utilities/assert" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="utility_assert_LPC54114_cm4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.utilities.assert_lite.LPC54114" name="assert_lite" brief="Utility assert_lite" version="1.0.0" full_name="Utility assert_lite" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="core/utilities/assert" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console_lite.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="utility_assert_lite_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="utility_assert_lite_LPC54114_cm4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="utility.debug_console.LPC54114" name="debug_console" brief="Utility debug_console" version="1.0.0" full_name="Utility debug_console" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="core/utilities/debug_console" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.LPC54114"/>
          <component_dependency value="platform.drivers.common.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="str" project_relative_path="./" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source relative_path="str" project_relative_path="./" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="utility_debug_console_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="str" project_relative_path="./" type="c_include"/>
        <include_path relative_path="debug_console" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console_lite.LPC54114" name="debug_console_lite" brief="Utility debug_console_lite" version="1.0.0" full_name="Utility debug_console_lite" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="core/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.usart_adapter.LPC54114"/>
          <component_dependency value="platform.drivers.common.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_LPC54114J256">
        <files mask="utility_debug_console_lite_LPC54114_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="utility_debug_console_lite_LPC54114_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.incbin.LPC54114" name="incbin" brief="Used to include slave core binary into master core binary." version="1.0.0" full_name="utility incbin" devices="LPC54114J256" user_visible="true" type="utilities" package_base_path="core/utilities/misc_utilities" project_base_path="utilities">
      <source toolchain="armgcc" relative_path="./" type="asm_include">
        <files mask="fsl_incbin.S"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_LPC54114J256">
        <files mask="utility_incbin_LPC54114_cm4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.utilities.notifier.LPC54114" name="notifier" brief="Utility notifier" version="1.0.0" full_name="Utility notifier" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="core/devices/LPC54114/utilities" project_base_path="utilities/utilities">
      <dependencies>
        <component_dependency value="platform.drivers.common.LPC54114"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_notifier.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_notifier.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.shell.LPC54114" name="shell" brief="Utility shell" version="1.0.0" full_name="Utility shell" devices="LPC54114J256" device_cores="cm0plus_LPC54114J256 cm4_LPC54114J256" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="core/devices/LPC54114/utilities" project_base_path="utilities">
      <defines>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="utility.debug_console.LPC54114"/>
          <component_dependency value="component.lists.LPC54114"/>
          <component_dependency value="platform.drivers.common.LPC54114"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
  </components>
</ksdk:manifest>
